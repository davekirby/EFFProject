@article{DEAP_JMLR2012, 
    author    = " F\'elix-Antoine Fortin and Fran\c{c}ois-Michel {De Rainville} and Marc-Andr\'e Gardner and Marc Parizeau and Christian Gagn\'e ",
    title     = { {DEAP}: Evolutionary Algorithms Made Easy },
    pages    = { 2171--2175 },
    volume    = { 13 },
    month     = { jul },
    year      = { 2012 },
    journal   = { Journal of Machine Learning Research }
}

@misc{fuzzylite,
 author={Juan Rada-Vilela},
 title={The FuzzyLite Libraries for Fuzzy Logic Control},
 url={https://fuzzylite.com/},
 year={2018}}

@book{Domingos15,
  abstract = {Society is changing, one learning algorithm at a time, from search engines to online dating, personalized medicine to predicting the stock market. But learning algorithms are not just about Big Data - these algorithms take raw data and make it useful by creating more algorithms. This is something new under the sun: a technology that builds itself. In this book, Domingos reveals how machine learning is remaking business, politics, science and war. And he takes us on an awe-inspiring quest to find 'The Master Algorithm' - a universal learner capable of deriving all knowledge from data.},
  added-at = {2018-04-15T13:17:55.000+0200},
  address = {New York},
  author = {Domingos, Pedro},
  biburl = {https://www.bibsonomy.org/bibtex/2b48e9f824f83e98a132511b244ed8ad0/flint63},
  file = {eBook:2015/Domingos15.pdf:PDF;Basic Books Product Page:https\://www.basicbooks.com/titles/pedro-domingos/the-master-algorithm/9780465065707/:URL;Penguin Books Paperback:https\://www.penguin.co.uk/books/269590/the-master-algorithm/:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/0465065708/:URL},
  groups = {public},
  interhash = {3d8bc19852ad9cab7580e2e00322a9c2},
  intrahash = {b48e9f824f83e98a132511b244ed8ad0},
  isbn = {978-0-465-06570-7},
  keywords = {01801 105 book shelf numerical ai science economy data information knowledge processing learn algorithm zzz.big},
  publisher = {Basic Books},
  timestamp = {2018-04-16T11:32:18.000+0200},
  title = {The Master Algorithm: How the Quest for the Ultimate Learning Machine Will Remake Our World},
  username = {flint63},
  year = 2015
}

@article{Zadeh-Fuzzy-1965,
  added-at = {2008-10-29T10:55:30.000+0100},
  author = {Zadeh, Lofti A.},
  biburl = {https://www.bibsonomy.org/bibtex/23be62b725d7862f666d9ecb25892e668/kleinerkeks},
  interhash = {0bf160dae1a4de0aeb94a28c20c7587b},
  intrahash = {3be62b725d7862f666d9ecb25892e668},
  journal = {Information and Control},
  keywords = {fuzzy information_retrieval wismasys0809},
  pages = {338-353},
  timestamp = {2008-10-29T10:55:30.000+0100},
  title = {Fuzzy Sets},
  url = {http://www-bisc.cs.berkeley.edu/Zadeh-1965.pdf},
  volume = 8,
  year = 1965
}

@article{oai:cogprints.soton.ac.uk:499,
  abstract = {I propose to consider the question, 'Can machines
                 think?' This should begin with definitions of the
                 meaning of the terms 'machine' and 'think.' The
                 definitions might be framed so as to reflect so far as
                 possible the normal use of the words, but this attitude
                 is dangerous, If the meaning of the words 'machine' and
                 'think' are to be found by examining how they are
                 commonly used it is difficult to escape the conclusion
                 that the meaning and the answer to the question, 'Can
                 machines think?' is to be sought in a statistical
                 survey such as a Gallup poll. But this is absurd.
                 Instead of attempting such a definition I shall replace
                 the question by another, which is closely related to it
                 and is expressed in relatively unambiguous words. The
                 new form of the problem can be described in terms of a
                 game which we call the 'imitation game.' It is played
                 with three people, a man (A), a woman (B), and an
                 interrogator (C) who may be of either sex. The
                 interrogator stays in a room apart front the other two.
                 The object of the game for the interrogator is to
                 determine which of the other two is the man and which
                 is the woman. He knows them by labels X and Y, and at
                 the end of the game he says either 'X is A and Y is B'
                 or 'X is B and Y is A.' The interrogator is allowed to
                 put questions to A and B. We now ask the question,
                 'What will happen when a machine takes the part of A in
                 this game?' Will the interrogator decide wrongly as
                 often when the game is played like this as he does when
                 the game is played between a man and a woman? These
                 questions replace our original, 'Can machines think?'},
  added-at = {2008-06-19T17:35:00.000+0200},
  author = {Turing, A. M.},
  bibsource = {OAI-PMH server at cogprints.ecs.soton.ac.uk},
  biburl = {https://www.bibsonomy.org/bibtex/2318b815a1f1554afc878daf72a76dc5e/brazovayeye},
  identifier = {Turing, A. M. (1950) Computing Machinery and
                 Intelligence. Mind 59:pp.~433-460.},
  interhash = {3f7a151a4f79fe75b4bb148b41279a9b},
  intrahash = {318b815a1f1554afc878daf72a76dc5e},
  journal = {Mind},
  keywords = {Artificial Cognitive Intelligence, Language, Learning, Machine Mind, Philosophy Psychology, Robotics algorithms, genetic of programming,},
  month = {January~01},
  notes = {cogprints.ecs.soton.ac.uk/archive/00000499 contains
                 OCR errors and one table has been deleted.

                 Human cloning. 'Random element'. Suggests digital
                 computers are not chaotic. Prediction for performance
                 in 2000.

                 'Obvious connection between this process and
                 evolution', 'hereditary material', 'mutation', 'Natural
                 selection' (interactive evolution, cf
                 \cite{unemi:1998:AFSS} amongst many).

                 Experiments not 'considered successful'.

                 Mechanical 'scientific induction'.

                 Chess, speaking English.

                 'We can only see a short distance ahead, but we can see
                 plenty there that needs to be done.'},
  oai = {oai:cogprints.soton.ac.uk:499},
  pages = {433--460},
  timestamp = {2008-06-19T17:53:23.000+0200},
  title = {Computing Machinery and Intelligence},
  url = {http://cogprints.ecs.soton.ac.uk/archive/00000499/00/turing.htm},
  volume = 49,
  year = 1950
}


@book{Holland:1975,
  added-at = {2009-06-26T15:25:19.000+0200},
  address = {Ann Arbor, MI},
  author = {Holland, John H.},
  biburl = {https://www.bibsonomy.org/bibtex/2c29f3ed4d5bbe62a26e61a0e786e176a/butz},
  description = {diverse cognitive systems bib},
  interhash = {5556ff81387180d09ef7583ae68dd32f},
  intrahash = {c29f3ed4d5bbe62a26e61a0e786e176a},
  keywords = {imported},
  note = {second edition, 1992},
  publisher = {University of Michigan Press},
  timestamp = {2009-06-26T15:25:35.000+0200},
  title = {Adaptation in Natural and Artificial Systems},
  year = 1975
}

@MISC{Koza92geneticprogramming,
    author = {John R. Koza},
    title = {Genetic Programming},
    year = {1992}
}


@article{Zadeh1994FuzzyLN,
  title={Fuzzy logic, neural networks, and soft computing},
  author={L. Zadeh},
  journal={Commun. ACM},
  year={1994},
  volume={37},
  pages={77-84}
}

@article{Jang1993ANFISAF,
  title={ANFIS: adaptive-network-based fuzzy inference system},
  author={J. Jang},
  journal={IEEE Trans. Syst. Man Cybern.},
  year={1993},
  volume={23},
  pages={665-685}
}

@article{Stanley2002EfficientEO,
  title={Efficient evolution of neural network topologies},
  author={K. Stanley and R. Miikkulainen},
  journal={Proceedings of the 2002 Congress on Evolutionary Computation. CEC'02 (Cat. No.02TH8600)},
  year={2002},
  volume={2},
  pages={1757-1762 vol.2}
}

@article{Cordn2004TenYO,
  title={Ten years of genetic fuzzy systems: current framework and new trends},
  author={O. Cord{\'o}n and F. Gomide and F. Herrera and F. Hoffmann and L. Magdalena},
  journal={Fuzzy Sets Syst.},
  year={2004},
  volume={141},
  pages={5-31}
}

@inproceedings{Ernest2016GeneticFB,
  title={Genetic Fuzzy based Artificial Intelligence for Unmanned Combat Aerial Vehicle Control in Simulated Air Combat Missions},
  author={N. Ernest and David Carroll and C. Schumacher and M. Clark and Kelly Cohen and G. Lee},
  year={2016}
}

@article{brockman2016openai,
  title={Openai gym},
  author={Brockman, Greg and Cheung, Vicki and Pettersson, Ludwig and Schneider, Jonas and Schulman, John and Tang, Jie and Zaremba, Wojciech},
  journal={arXiv preprint arXiv:1606.01540},
  year={2016}
}
@misc{beck2001agile,
  added-at = {2007-12-30T11:39:05.000+0100},
  author = {Beck, Kent and Beedle, Mike and van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron and Kern, Jon and Marick, Brian and Martin, Robert C. and Mellor, Steve and Schwaber, Ken and Sutherland, Jeff and Thomas, Dave},
  biburl = {https://www.bibsonomy.org/bibtex/28954248a545d88dd2c0e688d1c7e2f9d/juve},
  booktitle = {Manifesto for Agile Software Development},
  description = {Manifesto for Agile Software Development},
  interhash = {098cc7e185f10c3da390459a01e0d535},
  intrahash = {8954248a545d88dd2c0e688d1c7e2f9d},
  keywords = {imported},
  timestamp = {2007-12-30T11:39:05.000+0100},
  title = {Manifesto for Agile Software Development},
  url = {http://www.agilemanifesto.org/},
  year = 2001
}


@book{angelovHandbookComputationalIntelligence2016,
  title = {Handbook on Computational Intelligence},
  editor = {Angelov, Plamen P.},
  date = {2016},
  publisher = {{World Scientific}},
  location = {{New Jersey}},
  isbn = {978-981-4675-00-0 978-981-4675-03-1 978-981-4675-04-8},
  pagetotal = {2},
  keywords = {Computational intelligence,Data processing,Expert systems (Computer science),Handbooks; manuals; etc,Intelligent control systems,Neural networks (Computer science),Systems engineering},
  file = {/home/dave/Zotero/storage/LLSP3MGR/Angelov - 2016 - Handbook on computational intelligence.pdf}
}

@book{backEvolutionaryComputationAdvanced2000,
  title = {Evolutionary {{Computation}} 2: {{Advanced Algorithms}} and {{Operators}}},
  shorttitle = {Evolutionary {{Computation}} 2},
  editor = {Bäck, Thomas and Fogel, David and Michalewicz, Zbigniew},
  date = {2000-11-20},
  publisher = {{Taylor \&amp; Francis}},
  doi = {10.1201/9781420034349},
  url = {https://www.taylorfrancis.com/books/9781420034349},
  urldate = {2021-04-17},
  isbn = {978-0-7503-0665-2 978-1-4200-3434-9},
  langid = {english},
  file = {/home/dave/Zotero/storage/DUGMU3D7/Bäck et al. - 2000 - Evolutionary Computation 2 Advanced Algorithms an.pdf}
}

@book{baeckEvolutionaryComputationBasic2018,
  title = {Evolutionary {{Computation}} 1: {{Basic Algorithms}} and {{Operators}}},
  shorttitle = {Evolutionary {{Computation}} 1},
  editor = {Baeck, Thomas and Fogel, D.B and Michalewicz, Z},
  date = {2018-10-03},
  edition = {0},
  publisher = {{CRC Press}},
  doi = {10.1201/9781482268713},
  url = {https://www.taylorfrancis.com/books/9781482268713},
  urldate = {2021-04-17},
  isbn = {978-1-315-27463-8},
  langid = {english},
  file = {/home/dave/Zotero/storage/W9Y5PG5D/Baeck et al. - 2018 - Evolutionary Computation 1 Basic Algorithms and O.pdf}
}

@article{barrosSurveyEvolutionaryAlgorithms2012,
  title = {A {{Survey}} of {{Evolutionary Algorithms}} for {{Decision}}-{{Tree Induction}}},
  author = {Barros, Rodrigo Coelho and Basgalupp, Márcio Porto and de Carvalho, André C. P. L. F. and Freitas, Alex A.},
  options = {useprefix=true},
  date = {2012-05},
  journaltitle = {IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
  shortjournal = {IEEE Trans. Syst., Man, Cybern. C},
  volume = {42},
  number = {3},
  pages = {291--312},
  issn = {1094-6977, 1558-2442},
  doi = {10.1109/TSMCC.2011.2157494},
  url = {http://ieeexplore.ieee.org/document/5928432/},
  urldate = {2021-04-17},
  abstract = {This paper presents a survey of evolutionary algorithms that are designed for decision-tree induction. In this context, most of the paper focuses on approaches that evolve decision trees as an alternate heuristics to the traditional top-down divideand-conquer approach. Additionally, we present some alternative methods that make use of evolutionary algorithms to improve particular components of decision-tree classifiers. The paper’s original contributions are the following. First, it provides an up-to-date overview that is fully focused on evolutionary algorithms and decision trees and does not concentrate on any specific evolutionary approach. Second, it provides a taxonomy, which addresses works that evolve decision trees and works that design decision-tree components by the use of evolutionary algorithms. Finally, a number of references are provided that describe applications of evolutionary algorithms for decision-tree induction in different domains. At the end of this paper, we address some important issues and open questions that can be the subject of future research.},
  langid = {english},
  file = {/home/dave/Zotero/storage/ARQZRN4N/Barros et al. - 2012 - A Survey of Evolutionary Algorithms for Decision-T.pdf}
}

@article{carseEvolvingFuzzyRule1996,
  title = {Evolving Fuzzy Rule Based Controllers Using Genetic Algorithms},
  author = {Carse, Brian and Fogarty, Terence C. and Munro, Alistair},
  date = {1996-06},
  journaltitle = {Fuzzy Sets and Systems},
  shortjournal = {Fuzzy Sets and Systems},
  volume = {80},
  number = {3},
  pages = {273--293},
  issn = {01650114},
  doi = {10.1016/0165-0114(95)00196-4},
  url = {https://linkinghub.elsevier.com/retrieve/pii/0165011495001964},
  urldate = {2021-04-17},
  abstract = {The synthesis of genetics-based machine learning and fuzzy logic is beginning to show promise as a potent tool in solving complex control problems in multi-variate non-linear systems. In this paper an overview of current research applying the genetic algorithm to fuzzy rule based control is presented. A novel approach to genetics-based machine learning of fuzzy controllers, called a Pittsburgh Fuzzy Classifier System \# 1 (P-FCS1) is proposed. P-FCS1 is based on the Pittsburgh model of learning classifier systems and employs variable length rule-sets and simultaneously evolves fuzzy set membership functions and relations. A new crossover operator which respects the functional linkage between fuzzy rules with overlapping input fuzzy set membership functions is introduced. Experimental results using P-FCS l are reported and compared with other published results. Application of P-FCS1 to a distributed control problem (dynamic routing in computer networks) is also described and experimental results are presented.},
  langid = {english},
  file = {/home/dave/Zotero/storage/929GJBUW/Carse et al. - 1996 - Evolving fuzzy rule based controllers using geneti.pdf}
}

@article{chauhanSpeedupType1Fuzzy,
  title = {Speedup of {{Type}}-1 {{Fuzzy Logic Systems}} on {{Graphics Processing Units Using CUDA}}},
  author = {Chauhan, Durlabh and Singh, Satvir and Singh, Sarabjeet and Banga, Vijay Kumar},
  pages = {5},
  abstract = {Parallelcomputing is one of significant components of the High Performance Computing (HPC) and is being used to solve problems, which are large and complex in nature. Fuzzy Logic System (FLS) is a problem that becomes computationally intensive with increase in number of inputs and/or fuzzy rules. Running an FLS is highly parallel in nature, therefore, can be implemented in parallel on GPU using CUDA. In this paper, various fuzzy computations viz. rule firing, implication, aggregation and defuzzification are performed in parallel. Multiple threads are run at a time to fire multiple fuzzy rules, simultaneously, that reduces the overall FLS execution time. It is observed from simulation results that GPU works faster as compared to CPU when either number of inputs is increased or number of fuzzy rules.},
  langid = {english},
  file = {/home/dave/Zotero/storage/IRDDSSCA/Chauhan et al. - Speedup of Type-1 Fuzzy Logic Systems on Graphics .pdf}
}

@article{cordonHistoricalReviewEvolutionary2011,
  title = {A Historical Review of Evolutionary Learning Methods for {{Mamdani}}-Type Fuzzy Rule-Based Systems: {{Designing}} Interpretable Genetic Fuzzy Systems},
  shorttitle = {A Historical Review of Evolutionary Learning Methods for {{Mamdani}}-Type Fuzzy Rule-Based Systems},
  author = {Cordón, Oscar},
  date = {2011-09},
  journaltitle = {International Journal of Approximate Reasoning},
  shortjournal = {International Journal of Approximate Reasoning},
  volume = {52},
  number = {6},
  pages = {894--913},
  issn = {0888613X},
  doi = {10.1016/j.ijar.2011.03.004},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0888613X11000582},
  urldate = {2021-04-17},
  abstract = {The need for trading off interpretability and accuracy is intrinsic to the use of fuzzy systems. The obtaining of accurate but also human-comprehensible fuzzy systems played a key role in Zadeh and Mamdani’s seminal ideas and system identification methodologies. Nevertheless, before the advent of soft computing, accuracy progressively became the main concern of fuzzy model builders, making the resulting fuzzy systems get closer to black-box models such as neural networks. Fortunately, the fuzzy modeling scientific community has come back to its origins by considering design techniques dealing with the interpretability-accuracy tradeoff. In particular, the use of genetic fuzzy systems has been widely extended thanks to their inherent flexibility and their capability to jointly consider different optimization criteria. The current contribution constitutes a review on the most representative genetic fuzzy systems relying on Mamdani-type fuzzy rule-based systems to obtain interpretable linguistic fuzzy models with a good accuracy.},
  langid = {english},
  file = {/home/dave/Zotero/storage/CL8DN4FK/Cordón - 2011 - A historical review of evolutionary learning metho.pdf}
}

@article{cordonTenYearsGenetic2004,
  title = {Ten Years of Genetic Fuzzy Systems: Current Framework and New Trends},
  shorttitle = {Ten Years of Genetic Fuzzy Systems},
  author = {Cordón, O. and Gomide, F. and Herrera, F. and Hoffmann, F. and Magdalena, L.},
  date = {2004-01},
  journaltitle = {Fuzzy Sets and Systems},
  shortjournal = {Fuzzy Sets and Systems},
  volume = {141},
  number = {1},
  pages = {5--31},
  issn = {01650114},
  doi = {10.1016/S0165-0114(03)00111-8},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0165011403001118},
  urldate = {2021-04-17},
  abstract = {Fuzzy systems have demonstrated their ability to solve di erent kinds of problems in various application domains. Currently, there is an increasing interest to augment fuzzy systems with learning and adaptation capabilities. Two of the most successful approaches to hybridise fuzzy systems with learning and adaptation methods have been made in the realm of soft computing. Neural fuzzy systems and genetic fuzzy systems hybridise the approximate reasoning method of fuzzy systems with the learning capabilities of neural networks and evolutionary algorithms.},
  langid = {english},
  file = {/home/dave/Zotero/storage/3PY3UQBL/Cordón et al. - 2004 - Ten years of genetic fuzzy systems current framew.pdf}
}

@report{defourFuzzyGPUFuzzyArithmetic2013,
  type = {Research Report},
  title = {{{FuzzyGPU}}: A Fuzzy Arithmetic Library for {{GPU}}},
  shorttitle = {{{FuzzyGPU}}},
  author = {Defour, David and Marin, Manuel},
  date = {2013},
  institution = {{LIRMM}},
  url = {https://hal.archives-ouvertes.fr/hal-00856617},
  urldate = {2021-09-11},
  abstract = {Data are traditionally represented using native format such as integer or floating-point numbers in various flavor. However, some applications rely on more complex representation format. This is the case when uncertainty needs to be apprehended. Fuzzy arithmetic is one of the major tools to address this problem, but the execution time of basic operations such as addition or multiplication makes its usage prohibitive. In this article, thanks to a new representation format and modern GPU characteristics we show that it is possible to greatly reduce the execution time of those operations. These techniques have been implemented in fuzzyGPU, a freely distributed library of common operations over fuzzy number.},
  keywords = {computer arithmetic,Fuzzy arithmetic,GPGPU},
  file = {/home/dave/Zotero/storage/LBRE3IX5/Defour_Marin_2013_FuzzyGPU.pdf}
}

@online{DesignAnalogCircuits,
  title = {The Design of Analog Circuits by Means of Genetic Programming},
  author = {Koza, John R. and Bennett III, Forrest H. and Andre, David and Keane, Martin A.},
  date = {1999},
  journaltitle = {Evolutionary design by computers},
  pages = {365--385},
  publisher = {{Citeseer}},
  file = {/home/dave/Zotero/storage/YFD6358V/Koza et al_1999_The design of analog circuits by means of genetic programming.pdf}
}

@misc{Dua_2019,
  title = {{{UCI}} Machine Learning Repository},
  author = {Dua, Dheeru and Graff, Casey},
  date = {2017},
  publisher = {{University of California, Irvine, School of Information and Computer Sciences}},
  url = {http://archive.ics.uci.edu/ml}
}

@article{ernestGeneticFuzzyBased2016,
  title = {Genetic {{Fuzzy}} Based {{Artificial Intelligence}} for {{Unmanned Combat Aerial Vehicle Control}} in {{Simulated Air Combat Missions}}},
  author = {Ernest, Nicholas and Carroll, David},
  date = {2016},
  journaltitle = {Journal of Defense Management},
  shortjournal = {J Def Manag},
  volume = {06},
  number = {01},
  issn = {21670374},
  doi = {10.4172/2167-0374.1000144},
  url = {http://www.omicsgroup.org/journals/genetic-fuzzy-based-artificial-intelligence-for-unmanned-combat-aerialvehicle-control-in-simulated-air-combat-missions-2167-0374-1000144.php?aid=72227},
  urldate = {2021-04-17},
  abstract = {Breakthroughs in genetic fuzzy systems, most notably the development of the Genetic Fuzzy Tree methodology, have allowed fuzzy logic based Artificial Intelligences to be developed that can be applied to incredibly complex problems. The ability to have extreme performance and computational efficiency as well as to be robust to uncertainties and randomness, adaptable to changing scenarios, verified and validated to follow safety specifications and operating doctrines via formal methods, and easily designed and implemented are just some of the strengths that this type of control brings. Within this white paper, the authors introduce ALPHA, an Artificial Intelligence that controls flights of Unmanned Combat Aerial Vehicles in aerial combat missions within an extreme-fidelity simulation environment. To this day, this represents the most complex application of a fuzzy-logic based Artificial Intelligence to an Unmanned Combat Aerial Vehicle control problem. While development is on-going, the version of ALPHA presented withinwas assessed by Colonel (retired)Gene Lee who described ALPHA as “the most aggressive, responsive, dynamic and credible AI (he’s) seen-to-date.” The quality of these preliminary results in a problem that is not only complex and rife with uncertainties but also contains an intelligent and unrestricted hostile force has significant implications for this type of Artificial Intelligence. This work adds immensely to the body of evidence that this methodology is an ideal solution to a very wide array of problems.},
  langid = {english},
  file = {/home/dave/Zotero/storage/QUPE87CA/Ernest and Carroll - 2016 - Genetic Fuzzy based Artificial Intelligence for Un.pdf}
}

@article{ernestGeneticFuzzyTrees,
  title = {Genetic {{Fuzzy Trees}} for {{Intelligent Control}} of {{Unmanned Combat Aerial Vehicles}}},
  author = {Ernest, Nicholas D},
  pages = {151},
  langid = {english},
  file = {/home/dave/Zotero/storage/D8MPI7X7/Ernest - Genetic Fuzzy Trees for Intelligent Control of Unm.pdf}
}

@inproceedings{fuchsPyFUMEPythonPackage2020,
  title = {{{pyFUME}}: A {{Python Package}} for {{Fuzzy Model Estimation}}},
  shorttitle = {{{pyFUME}}},
  booktitle = {2020 {{IEEE International Conference}} on {{Fuzzy Systems}} ({{FUZZ}}-{{IEEE}})},
  author = {Fuchs, Caro and Spolaor, Simone and Nobile, Marco S. and Kaymak, Uzay},
  date = {2020-07},
  pages = {1--8},
  issn = {1558-4739},
  doi = {10.1109/FUZZ48607.2020.9177565},
  abstract = {Living in the era of "data deluge" demands for an increase in the application and development of machine learning methods, both in basic and applied research. Among these methods, in the last decades fuzzy inference systems carved out their own niche as (light) grey box models, which are considered more interpretable and transparent than other commonly employed methods, such as artificial neural networks. Although commercially distributed alternatives are available, software able to assist practitioners and researchers in each step of the estimation of a fuzzy model from data are still limited in scope and applicability. This is especially true when looking at software developed in Python, a programming language that quickly gained popularity among data scientists and it is often considered their language of choice. To fill this gap, we introduce pyFUME, a Python library for automatically estimating fuzzy models from data. pyFUME contains a set of classes and methods to estimate the antecedent sets and the consequent parameters of a Takagi-Sugeno fuzzy model from data, and then create an executable fuzzy model exploiting the Simpful library. pyFUME can be beneficial to practitioners, thanks to its pre-implemented and user-friendly pipelines, but also to researchers that want to fine-tune each step of the estimation process.},
  eventtitle = {2020 {{IEEE International Conference}} on {{Fuzzy Systems}} ({{FUZZ}}-{{IEEE}})},
  keywords = {Data models,data-driven,Estimation,Index Terms—fuzzy logic,Libraries,Mathematical model,open-source software,Python,Takagi-Sugeno fuzzy model,Takagi-Sugeno model},
  file = {/home/dave/Zotero/storage/CQC4HNVA/Fuchs et al_2020_pyFUME.pdf;/home/dave/Zotero/storage/P2B4WYK9/9177565.html}
}

@article{gonzalezCompletenessConsistencyConditions1998,
  title = {Completeness and Consistency Conditions for Learning Fuzzy Rules},
  author = {Gonzalez, Antonio and Perez, Raul},
  date = {1998-05},
  journaltitle = {Fuzzy Sets and Systems},
  shortjournal = {Fuzzy Sets and Systems},
  volume = {96},
  number = {1},
  pages = {37--51},
  issn = {01650114},
  doi = {10.1016/S0165-0114(96)00280-1},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0165011496002801},
  urldate = {2021-04-17},
  abstract = {The completeness and consistency conditions were introduced in order to achieve acceptable concept recognition rules. In real problems, we can handle noise-affected examples and it is not always possible to maintain both conditions. Moreover, when we use fuzzy information there is a partial matching between examples and rules, therefore the consistency condition becomes a matter of degree. In this paper, a learning algorithm based on soft consistency and completeness conditions is proposed. This learning algorithm combines in a single process rule and feature selection and it is tested on different databases. @ 1998 Elsevier Science B.V. All rights reserved.},
  langid = {english},
  file = {/home/dave/Zotero/storage/L3D22EWJ/Gonzalez and Perez - 1998 - Completeness and consistency conditions for learni.pdf}
}

@article{goosLectureNotesComputer,
  title = {Lecture {{Notes}} in {{Computer Science}}},
  author = {Goos, Gerhard and Hartmanis, Juris and van Leeuwen, Jan and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M and Kobsa, Alfred and Mattern, Friedemann and Mitchell, John C and Naor, Moni and Nierstrasz, Oscar and Rangan, C Pandu and Steffen, Bernhard},
  options = {useprefix=true},
  pages = {734},
  langid = {english},
  file = {/home/dave/Zotero/storage/P8EVHWGW/Goos et al. - Lecture Notes in Computer Science.pdf}
}

@article{heinGeneratingInterpretableFuzzy2018,
  title = {Generating {{Interpretable Fuzzy Controllers}} Using {{Particle Swarm Optimization}} and {{Genetic Programming}}},
  author = {Hein, Daniel and Udluft, Steffen and Runkler, Thomas A.},
  date = {2018-07-06},
  journaltitle = {Proceedings of the Genetic and Evolutionary Computation Conference Companion},
  eprint = {1804.10960},
  eprinttype = {arxiv},
  pages = {1268--1275},
  doi = {10.1145/3205651.3208277},
  url = {http://arxiv.org/abs/1804.10960},
  urldate = {2021-04-17},
  abstract = {Autonomously training interpretable control strategies, called policies, using pre-existing plant trajectory data is of great interest in industrial applications. Fuzzy controllers have been used in industry for decades as interpretable and efficient system controllers. In this study, we introduce a fuzzy genetic programming (GP) approach called fuzzy GP reinforcement learning (FGPRL) that can select the relevant state features, determine the size of the required fuzzy rule set, and automatically adjust all the controller parameters simultaneously. Each GP individual's fitness is computed using model-based batch reinforcement learning (RL), which first trains a model using available system samples and subsequently performs Monte Carlo rollouts to predict each policy candidate's performance. We compare FGPRL to an extended version of a related method called fuzzy particle swarm reinforcement learning (FPSRL), which uses swarm intelligence to tune the fuzzy policy parameters. Experiments using an industrial benchmark show that FGPRL is able to autonomously learn interpretable fuzzy policies with high control performance.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Artificial Intelligence},
  file = {/home/dave/Zotero/storage/GQRGEE2P/Hein et al. - 2018 - Generating Interpretable Fuzzy Controllers using P.pdf}
}

@article{heinParticleSwarmOptimization2017,
  title = {Particle {{Swarm Optimization}} for {{Generating Interpretable Fuzzy Reinforcement Learning Policies}}},
  author = {Hein, Daniel and Hentschel, Alexander and Runkler, Thomas and Udluft, Steffen},
  date = {2017-10},
  journaltitle = {Engineering Applications of Artificial Intelligence},
  shortjournal = {Engineering Applications of Artificial Intelligence},
  volume = {65},
  eprint = {1610.05984},
  eprinttype = {arxiv},
  pages = {87--98},
  issn = {09521976},
  doi = {10.1016/j.engappai.2017.07.005},
  url = {http://arxiv.org/abs/1610.05984},
  urldate = {2021-04-17},
  abstract = {Fuzzy controllers are efficient and interpretable system controllers for continuous state and action spaces. To date, such controllers have been constructed manually or trained automatically either using expert-generated problem-specific cost functions or incorporating detailed knowledge about the optimal control strategy. Both requirements for automatic training processes are not found in most real-world reinforcement learning (RL) problems. In such applications, online learning is often prohibited for safety reasons because it requires exploration of the problem’s dynamics during policy training. We introduce a fuzzy particle swarm reinforcement learning (FPSRL) approach that can construct fuzzy RL policies solely by training parameters on world models that simulate real system dynamics. These world models are created by employing an autonomous machine learning technique that uses previously generated transition samples of a real system. To the best of our knowledge, this approach is the first to relate self-organizing fuzzy controllers to model-based batch RL. FPSRL is intended to solve problems in domains where online learning is prohibited, system dynamics are relatively easy to model from previously generated default policy transition samples, and it is expected that a relatively easily interpretable control policy exists. The efficiency of the proposed approach with problems from such domains is demonstrated using three standard RL benchmarks, i.e., mountain car, cart-pole balancing, and cart-pole swing-up. Our experimental results demonstrate high-performing, interpretable fuzzy policies.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Machine Learning,Computer Science - Neural and Evolutionary Computing,Electrical Engineering and Systems Science - Systems and Control},
  file = {/home/dave/Zotero/storage/X4VVYXPN/Hein et al. - 2017 - Particle Swarm Optimization for Generating Interpr.pdf}
}

@article{INTELLIGENTMACHINERY,
  title = {{{INTELLIGENT MACHINERY}}},
  pages = {17},
  abstract = {The possible ways in which machinery might be made to show intelligent behaviour are discussed. The analogy with the human brain is used as a guiding principle. It is pointed out that the potentialities of the human intelligence can only be realized if suitable education is provided. The investigation mainly centres round an analogous teaching process applied to machines. The idea of an unorganized machine is defined, and it is suggested that the infant human cortex is of this nature. Simple examples of such machines are given, and their education by means of rewards and punishments is discussed. In one case the education process is carried through until the organization is similar to that of an ACE.},
  langid = {english},
  file = {/home/dave/Zotero/storage/I8LK6HMP/INTELLIGENT MACHINERY.pdf}
}

@article{jangANFISAdaptivenetworkbasedFuzzy1993,
  title = {{{ANFIS}}: Adaptive-Network-Based Fuzzy Inference System},
  shorttitle = {{{ANFIS}}},
  author = {Jang, J.-S.R.},
  year = {May-June/1993},
  journaltitle = {IEEE Transactions on Systems, Man, and Cybernetics},
  shortjournal = {IEEE Trans. Syst., Man, Cybern.},
  volume = {23},
  number = {3},
  pages = {665--685},
  issn = {00189472},
  doi = {10.1109/21.256541},
  url = {http://ieeexplore.ieee.org/document/256541/},
  urldate = {2021-04-17},
  abstract = {The architecture and learning procedure underlying ANF’IS (adaptive-network-based fuzzy inference system) is presented, which is a fuzzy inference system implemented in the framework of adaptive networks. By using a hybrid learning procedure, the proposed ANFIS can construct an input-output mapping based on both human knowledge (in the form of fuzzy if-then rules) and stipulated input-output data pairs. In the simulation, the ANFIS architecture is employed to model nonlinear functions, identify nonlinear components on-linely in a control system, and predict a chaotic time series, all yielding remarkable results. Comparisons with artificial neural networks and earlier work on fuzzy modeling are listed and discussed. Other extensions of the proposed ANFIS and promising applications to automatic control and signal processing are also suggested.},
  langid = {english},
  file = {/home/dave/Zotero/storage/LM4HSYAC/Jang - 1993 - ANFIS adaptive-network-based fuzzy inference syst.pdf}
}

@inproceedings{jangFuzzyControllerDesign1992,
  title = {Fuzzy Controller Design without Domain Experts},
  author = {Jang, Jyh-Shing},
  date = {1992-04-08},
  pages = {289--296},
  doi = {10.1109/FUZZY.1992.258631},
  abstract = {The control of nonlinear systems through a self-learning mechanism that can derive the membership functions of the rules used by a fuzzy controller is considered. Without resorting to domain experts, a fuzzy controller has to be constructed that can perform the control task of a regulator problem. The approach is based on the adaptive network, a flexible building block that can be used to implement fuzzy controllers as well as the plants under consideration. The learning rule of adaptive networks can force the plant state to approach a desired state on a time step by time step basis. The proposed approach was used to build a fuzzy controller for balancing an inverted pendulum system. It is shown that only four fuzzy if-then rules are necessary to perform the control task. The controller was quite tolerant to dealing with initial conditions that deviated significantly from the origin. The inverted pendulum system was used to test the proposed control scheme. The simulation results demonstrated its feasibility and robustness},
  isbn = {978-0-7803-0236-5},
  file = {/home/dave/Zotero/storage/J2Q8AKTC/Jang - 1992 - Fuzzy controller design without domain experts.pdf}
}

@article{kahramanComprehensiveLiteratureReview2016,
  title = {A {{Comprehensive Literature Review}} of 50 {{Years}} of {{Fuzzy Set Theory}}},
  author = {Kahraman, Cengiz and Öztaysi, Basar and Onar, Sezi Cevik},
  date = {2016-04},
  journaltitle = {International Journal of Computational Intelligence Systems},
  volume = {9},
  pages = {3--24},
  publisher = {{Atlantis Press}},
  issn = {1875-6883},
  doi = {10.1080/18756891.2016.1180817},
  url = {https://www.atlantis-press.com/journals/ijcis/25868759},
  urldate = {2021-08-22},
  abstract = {Fuzzy sets have a great progress in every scientific research area. It found many application areas in both theoretical and practical studies from engineering area to arts and humanities, from computer science to health sciences, and from life sciences to physical sciences. In this paper, a comprehensive literature review on the fuzzy set theory is...},
  issue = {Supplement 1},
  langid = {english},
  file = {/home/dave/Zotero/storage/UVDAZN2V/Kahraman et al_2016_A Comprehensive Literature Review of 50 Years of Fuzzy Set Theory.pdf;/home/dave/Zotero/storage/VVI2TVPN/view.html}
}

@book{kasabovFoundationsNeuralNetworks1996,
  title = {Foundations of Neural Networks, Fuzzy Systems, and Knowledge Engineering},
  author = {Kasabov, Nikola K.},
  date = {1996},
  publisher = {{MIT Press}},
  location = {{Cambridge, Mass}},
  isbn = {978-0-262-11212-3},
  langid = {english},
  pagetotal = {550},
  keywords = {Artificial intelligence,Expert systems (Computer science),Fuzzy systems,Neural networks (Computer science)},
  file = {/home/dave/Zotero/storage/TCNRBIKP/Kasabov - 1996 - Foundations of neural networks, fuzzy systems, and.pdf}
}

@book{kozaGeneticProgrammingProgramming1992,
  title = {Genetic Programming: On the Programming of Computers by Means of Natural Selection},
  shorttitle = {Genetic Programming},
  author = {Koza, John R.},
  date = {1992},
  series = {Complex Adaptive Systems},
  publisher = {{MIT Press}},
  location = {{Cambridge, Mass}},
  isbn = {978-0-262-11170-6},
  langid = {english},
  pagetotal = {819},
  keywords = {Genetic programming (Computer science)},
  file = {/home/dave/Zotero/storage/ARVSR37D/Koza - 1992 - Genetic programming on the programming of compute.pdf;/home/dave/Zotero/storage/U6F47YCU/Koza - 1992 - Genetic programming on the programming of compute.pdf}
}

@article{kozaGeneticProgrammingTuring,
  title = {Genetic {{Programming}}: {{Turing}}’s {{Third Way}} to {{Achieve Machine Intelligence}}},
  author = {Koza, J R and Bennett, F H and Andre, D and Keane, M A},
  pages = {18},
  langid = {english},
  file = {/home/dave/Zotero/storage/8579PZJR/Koza et al. - Genetic Programming Turing’s Third Way to Achieve.pdf}
}

@article{kozaGeneticProgrammingTutorial,
  title = {A {{Genetic Programming Tutorial}}},
  author = {Koza, John R and Poli, Riccardo},
  pages = {40},
  abstract = {Genetic programming is a technique to automatically discover computer programs using principles of Darwinian evolution. This chapter introduces the basics of genetic programming. To make the material more suitable for beginners, these are illustrated with an extensive example. In addition, the chapter touches upon some of the more advanced variants of genetic programming as well as its theoretical foundations. Numerous pointers to further reading, software tools and Web sites are also provided.},
  langid = {english},
  file = {/home/dave/Zotero/storage/YE9Z2T3S/Koza and Poli - A Genetic Programming Tutorial.pdf}
}

@inbook{lughoferEvolvingFuzzySystems2016,
  title = {Evolving {{Fuzzy Systems}}—{{Fundamentals}}, {{Reliability}}, {{Interpretability}}, {{Useability}}, {{Applications}}},
  booktitle = {Handbook on {{Computational Intelligence}}},
  author = {Lughofer, Edwin},
  date = {2016-05},
  pages = {67--135},
  publisher = {{WORLD SCIENTIFIC}},
  doi = {10.1142/9789814675017_0003},
  url = {http://www.worldscientific.com/doi/abs/10.1142/9789814675017_0003},
  urldate = {2021-04-17},
  bookauthor = {Angelov, Plamen Parvanov},
  isbn = {978-981-4675-00-0 978-981-4675-01-7},
  langid = {english},
  file = {/home/dave/Zotero/storage/E64LWQUQ/Lughofer - 2016 - Evolving Fuzzy Systems—Fundamentals, Reliability, .pdf}
}

@incollection{lukeFightingBloatNonparametric2002,
  title = {Fighting {{Bloat}} with {{Nonparametric Parsimony Pressure}}},
  booktitle = {Parallel {{Problem Solving}} from {{Nature}} — {{PPSN VII}}},
  author = {Luke, Sean and Panait, Liviu},
  editor = {Guervós, Juan Julián Merelo and Adamidis, Panagiotis and Beyer, Hans-Georg and Schwefel, Hans-Paul and Fernández-Villacañas, José-Luis},
  options = {useprefix=true},
  date = {2002},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  volume = {2439},
  pages = {411--421},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-45712-7_40},
  url = {http://link.springer.com/10.1007/3-540-45712-7_40},
  urldate = {2021-09-04},
  abstract = {Many forms of parsimony pressure are parametric, that is final fitness is a parametric model of the actual size and raw fitness values. The problem with parametric techniques is that they are hard to tune to prevent size from dominating fitness late in the evolutionary run, or to compensate for problem-dependent nonlinearities in the raw fitness function. In this paper we briefly discuss existing bloat-control techniques, then introduce two new kinds of non-parametric parsimony pressure, Direct and Proportional Tournament. As their names suggest, these techniques are based on simple modifications of tournament selection to consider both size and fitness, but not together as a combined parametric equation. We compare the techniques against, and in combination with, the most popular genetic programming bloat-control technique, Koza-style depth limiting, and show that they are effective in limiting size while still maintaining good bestfitness-of-run results.},
  editorb = {Goos, Gerhard and Hartmanis, Juris and van Leeuwen, Jan},
  editorbtype = {redactor},
  isbn = {978-3-540-44139-7 978-3-540-45712-1},
  langid = {english},
  file = {/home/dave/Zotero/storage/8LUZPAEA/Luke and Panait - 2002 - Fighting Bloat with Nonparametric Parsimony Pressu.pdf}
}

@inproceedings{mendesOnlineEvolvingFuzzy2017,
  title = {Online Evolving Fuzzy Control Design: {{An}} Application to a {{CSTR}} Plant},
  shorttitle = {Online Evolving Fuzzy Control Design},
  booktitle = {2017 {{IEEE}} 15th {{International Conference}} on {{Industrial Informatics}} ({{INDIN}})},
  author = {Mendes, Jerome and Souza, Francisco and Araujo, Rui},
  date = {2017-07},
  pages = {218--225},
  publisher = {{IEEE}},
  location = {{Emden}},
  doi = {10.1109/INDIN.2017.8104774},
  url = {http://ieeexplore.ieee.org/document/8104774/},
  urldate = {2021-04-17},
  abstract = {The paper proposes a methodology to self-evolve an online fuzzy logic controller (FLC). The proposed methodology does not require any initialization at all, it can start with an empty set of fuzzy control rules or with a simple collection of fuzzy control rules obtained from an expert operator. The FLC design is online, using only the input/output data obtained during the normal operation of the system while it is being controlled. The FLC is composed of a simple structure, where each input variable has its own set of fuzzy control rules, and is evaluated individually by the proposed methodology avoiding the high increase in the number of fuzzy control rules. The FLC structure and their antecedent and consequent parameters are both online modified by the proposed methodology. Only simple information about the system and controller is need, specifically the universe of discourse of the input and output variables, an information that is mandatory to control any process. The performance of the proposed methodology is tested on a simulated continuousstirred tank reactor (CSTR) system where the results show that the proposed methodology has the capability of designing the FLC in order to successfully controlling the CSTR system by evolving/modifying the FLC structure when unknown regions of operation are reached (unknown for the controller).},
  eventtitle = {2017 {{IEEE}} 15th {{International Conference}} on {{Industrial Informatics}} ({{INDIN}})},
  isbn = {978-1-5386-0837-1},
  langid = {english},
  file = {/home/dave/Zotero/storage/F84L7T5W/Mendes et al. - 2017 - Online evolving fuzzy control design An applicati.pdf}
}

@article{michellStronglytypedGeneticProgramming2020,
  title = {Strongly-Typed Genetic Programming and Fuzzy Inference System: {{An}} Embedded Approach to Model and Generate Trading Rules},
  shorttitle = {Strongly-Typed Genetic Programming and Fuzzy Inference System},
  author = {Michell, Kevin and Kristjanpoller, Werner},
  date = {2020-05},
  journaltitle = {Applied Soft Computing},
  shortjournal = {Applied Soft Computing},
  volume = {90},
  pages = {106169},
  issn = {15684946},
  doi = {10.1016/j.asoc.2020.106169},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S1568494620301095},
  urldate = {2021-04-17},
  abstract = {Generating trading signals is an interesting topic and a hard problem to solve. This work uses fuzzy inference system (FIS) and strongly typed genetic programming (STGP) to generate trading rules for the US stock market, a framework that we call FISTGP. The two embedded models have not been widely evaluated in financial applications, and according to the literature, their combination could improve forecasting performance. The fitness function used to train the STGP model is based on accuracy, optimizing the buy and sell signals, taking a different approach to the classic optimization of return–risk ratio. The rules are generated in a FIS framework, and the final signal depends on the amount of information that the investor relies on. The model is suited to each investor as a recommendation of when to change portfolio composition according to his or her particular criteria. Ternary rules are generated based on an economic interpretation, considering the risk-free rate as a part of more demanding rules. The model is applied to 90 of the most traded and active stocks in the US stock market. This approach generates important recommendations and delivers useful information to investors. The results show that the proposed model outperforms the Buy and Hold (B\&H) strategy by 28.62\% in the test period, considering excesses of return, with almost the same risk (1.28\% higher). The other base models underperform in comparison to the B\&H, with the proposed model also outperforming them.},
  langid = {english},
  file = {/home/dave/Zotero/storage/WQT85PUY/Michell and Kristjanpoller - 2020 - Strongly-typed genetic programming and fuzzy infer.pdf}
}

@article{muniEvolutionFuzzyClassifiers2012,
  title = {Evolution of {{Fuzzy Classifiers Using Genetic Programming}}},
  author = {Muni, Durga Prasad and Pal, Nikhil R.},
  date = {2012-03},
  journaltitle = {Fuzzy Information and Engineering},
  shortjournal = {Fuzzy Information and Engineering},
  volume = {4},
  number = {1},
  pages = {29--49},
  issn = {1616-8658, 1616-8666},
  doi = {10.1007/s12543-012-0099-8},
  url = {https://www.tandfonline.com/doi/full/10.1007/s12543-012-0099-8},
  urldate = {2021-04-17},
  abstract = {In this paper, we propose a genetic programming (GP) based approach to evolve fuzzy rule based classifiers. For a c-class problem, a classifier consists of c trees. Each tree, Ti, of the multi-tree classifier represents a set of rules for class i. During the evolutionary process, the inaccurate/inactive rules of the initial set of rules are removed by a cleaning scheme. This allows good rules to sustain and that eventually determines the number of rules. In the beginning, our GP scheme uses a randomly selected subset of features and then evolves the features to be used in each rule. The initial rules are constructed using prototypes, which are generated randomly as well as by the fuzzy k-means (FKM) algorithm. Besides, experiments are conducted in three different ways: Using only randomly generated rules, using a mixture of randomly generated rules and FKM prototype based rules, and with exclusively FKM prototype based rules. The performance of the classifiers is comparable irrespective of the type of initial rules. This emphasizes the novelty of the proposed evolutionary scheme. In this context, we propose a new mutation operation to alter the rule parameters. The GP scheme optimizes the structure of rules as well as the parameters involved. The method is validated on six benchmark data sets and the performance of the proposed scheme is found to be satisfactory.},
  langid = {english},
  file = {/home/dave/Zotero/storage/BVADGYQH/Muni and Pal - 2012 - Evolution of Fuzzy Classifiers Using Genetic Progr.pdf}
}

@book{oreillyGeneticProgrammingTheory2005,
  title = {Genetic Programming Theory and Practice {{II}}},
  editor = {O'Reilly, Una-May},
  date = {2005},
  series = {Genetic Programming Series},
  number = {GPEM 08},
  publisher = {{Springer}},
  location = {{New York}},
  isbn = {978-0-387-23253-9},
  langid = {english},
  pagetotal = {320},
  keywords = {Genetic programming (Computer science)},
  file = {/home/dave/Zotero/storage/HFEKCZY7/O'Reilly - 2005 - Genetic programming theory and practice II.pdf}
}

@article{pipeMichiganPittsburghFuzzy,
  title = {"{{Michigan}}" and "{{Pittsburgh}}" {{Fuzzy Classifier Systems}} for {{Learning Mobile Robot Control Rules}}: {{An Experimental Comparison}}},
  author = {Pipe, Anthony G and Carse, Brian},
  pages = {5},
  abstract = {Weextendourpreviousworkonthe artificial evolutionof FuzzyClassifier Systemass reactivecontrollersfor mobile robots, to encompass more versatile genotypic representationsandmorepowerfulgenetic operators. The results are an improvemeonntourearlier work;in general, better controllersareevolvedin fewergenerationsH. owever, the moreglobalevolutionarcyharacteristicsof the Pittsburgh approacshtill biastheoverallresultsheavilyin its favourA. majorweaknesisn bothapproacheiss the lackof robustness in retaining crucial, but seldom-activerules in the evolutionarpyopulation.},
  langid = {english},
  file = {/home/dave/Zotero/storage/4LMNLLZL/Pipe and Carse - Michigan and Pittsburgh Fuzzy Classifier Syste.pdf}
}

@book{poliFieldGuideGenetic2008,
  title = {A Field Guide to Genetic Programming},
  author = {Poli, Riccardo and Langdon, William B. and McPhee, Nicholas F. and Koza, John R.},
  date = {2008},
  publisher = {{Lulu Press]}},
  location = {{[Morrisville, NC}},
  isbn = {978-1-4092-0073-4},
  langid = {english},
  pagetotal = {233},
  annotation = {OCLC: 837998350},
  file = {/home/dave/Zotero/storage/6VTH4W3U/Poli et al. - 2008 - A field guide to genetic programming.pdf}
}

@article{rada-vilelaFuzzyliteFuzzyLogic,
  title = {Fuzzylite: A Fuzzy Logic Control Library in {{C}}++},
  author = {Rada-Vilela, Juan},
  pages = {5},
  abstract = {Fuzzy Logic Controllers (FLCs) are software components found nowadays within well-known home appliances such as washing machines, rice cookers and refrigerators. Their objective is to control certain operations of these devices utilizing rules expressed with the uncertainty of human terms such as cold, heavy and fast. Such a flexibility has made of FLCs a widely used approach to incorporate artificial intelligence not only into home appliances, but also into energy-efficient motors, industrial control systems, human decision making, robots, and much more. State-of-the-art libraries to model FLCs have strong limitations in terms of licensing, cost, design and implementation, all of which have been recently addressed in a free open-source fuzzy logic control library named fuzzylite. This paper presents an introduction to fuzzy logic control and the underlying design and operation of fuzzylite.},
  langid = {english},
  file = {/home/dave/Zotero/storage/SQ3X2M5C/Rada-Vilela - fuzzylite a fuzzy logic control library in C++.pdf}
}

@article{rada-vilelaFuzzyLiteLibrariesFuzzy2018,
  title = {The {{FuzzyLite Libraries}} for {{Fuzzy Logic Control}}},
  author = {Rada-Vilela, Juan},
  date = {2018},
  pages = {17},
  abstract = {Fuzzy Logic Controllers (FLCs) are mathematical models designed to control systems by means of fuzzy logic. Their simplicity, flexibility, interpretability, and handling of uncertainty have seen them applied to address different problems in a variety of domains. The seminal ideas of FLCs date back to 1965, and today there are more than 20 software libraries that provide such a functionality with different degrees of success. In spite of the widespread usage of FLCs, many of these libraries have not yet been thoroughly compared, hence raising questions about their correctness, performance, and accuracy when having to choose a library among them. In this article, we compare some of the most relevant libraries to design and operate FLCs, namely the FuzzyLite libraries, Matlab, Octave, and jFuzzyLogic. These libraries are evaluated on a set of 20 benchmarks that include Mamdani and Takagi-Sugeno FLCs as well as different membership functions. Our focus is on the performance and accuracy of the libraries, but we also consider the number of features and the amount of source code documentation to rate their overall quality. The results show that the FuzzyLite libraries offer the most accurate results, the highest number of features, the second best performance, and the second most documented source code, thus ranking them first for overall quality. The next libraries in the rankings are Octave, Matlab, and jFuzzyLogic (respectively). Our analysis of results finds explanations for the differences in performance and accuracy between the libraries, which provides useful information not only to further improve their quality, but also for users to make better and more informed decisions when having to choose one.},
  langid = {english},
  file = {/home/dave/Zotero/storage/TGHZZ2XR/Rada-Vilela - 2018 - The FuzzyLite Libraries for Fuzzy Logic Control.pdf}
}

@article{richardsonMarkovLogicNetworks2006,
  title = {Markov Logic Networks},
  author = {Richardson, Matthew and Domingos, Pedro},
  date = {2006-02},
  journaltitle = {Machine Learning},
  shortjournal = {Mach Learn},
  volume = {62},
  number = {1-2},
  pages = {107--136},
  issn = {0885-6125, 1573-0565},
  doi = {10.1007/s10994-006-5833-1},
  url = {http://link.springer.com/10.1007/s10994-006-5833-1},
  urldate = {2021-04-17},
  abstract = {We propose a simple approach to combining first-order logic and probabilistic graphical models in a single representation. A Markov logic network (MLN) is a first-order knowledge base with a weight attached to each formula (or clause). Together with a set of constants representing objects in the domain, it specifies a ground Markov network containing one feature for each possible grounding of a first-order formula in the KB, with the corresponding weight. Inference in MLNs is performed by MCMC over the minimal subset of the ground network required for answering the query. Weights are efficiently learned from relational databases by iteratively optimizing a pseudo-likelihood measure. Optionally, additional clauses are learned using inductive logic programming techniques. Experiments with a real-world database and knowledge base in a university domain illustrate the promise of this approach.},
  langid = {english},
  file = {/home/dave/Zotero/storage/42PHH3K7/Richardson and Domingos - 2006 - Markov logic networks.pdf}
}

@book{sangalliImportanceBeingFuzzy1998,
  title = {The Importance of Being Fuzzy: And Other Insights from the Border between Math and Computers},
  shorttitle = {The Importance of Being Fuzzy},
  author = {Sangalli, Arturo},
  date = {1998},
  publisher = {{Princeton University Press}},
  location = {{Princeton, N.J}},
  isbn = {978-0-691-00144-9},
  langid = {english},
  pagetotal = {173},
  keywords = {Fuzzy systems,Soft computing},
  file = {/home/dave/Zotero/storage/2JPJ4A9D/Sangalli - 1998 - The importance of being fuzzy and other insights .pdf}
}

@article{spolaorSimpfulUserFriendlyPython2020,
  title = {Simpful: {{A User}}-{{Friendly Python Library}} for {{Fuzzy Logic}}},
  shorttitle = {Simpful},
  author = {Spolaor, Simone and Fuchs, Caro and Cazzaniga, Paolo and Kaymak, Uzay and Besozzi, Daniela and Nobile, Marco S.},
  date = {2020-10},
  journaltitle = {International Journal of Computational Intelligence Systems},
  volume = {13},
  number = {1},
  pages = {1687--1698},
  publisher = {{Atlantis Press}},
  issn = {1875-6883},
  doi = {10.2991/ijcis.d.201012.002},
  url = {https://www.atlantis-press.com/journals/ijcis/125945415},
  urldate = {2021-04-25},
  abstract = {Many researchers have used fuzzy set theory and fuzzy logic in a variety of applications related to computer science and engineering, given the capability of fuzzy inference systems to deal with uncertainty, represent vague concepts, and connect human language to numerical data. In this work we propose Simpful, a general-purpose and user-friendly Python...},
  langid = {english},
  file = {/home/dave/Zotero/storage/98J7EU5K/Spolaor et al_2020_Simpful.pdf;/home/dave/Zotero/storage/LCXQ43SV/125945415.html}
}

@inproceedings{stanleyEfficientEvolutionNeural2002,
  title = {Efficient Evolution of Neural Network Topologies},
  booktitle = {Proceedings of the 2002 {{Congress}} on {{Evolutionary Computation}}. {{CEC}}'02 ({{Cat}}. {{No}}.{{02TH8600}})},
  author = {Stanley, K.O. and Miikkulainen, R.},
  date = {2002},
  volume = {2},
  pages = {1757--1762},
  publisher = {{IEEE}},
  location = {{Honolulu, HI, USA}},
  doi = {10.1109/CEC.2002.1004508},
  url = {http://ieeexplore.ieee.org/document/1004508/},
  urldate = {2021-04-17},
  abstract = {Neuroevolution, i.e. evolving artificial neural networks with genetic algorithms, has been highly effective in reinforcement learning tasks, particularly those with hidden state information. An important question in neuroevolution is how to gain an advantage from evolving neural network topologies along with weights. We present a method, NeuroEvolution of Augmenting Topologies (NEAT) that outperforms the best fixed-topology methods on a challenging benchmark reinforcement learning task. We claim that the increased efficiency is due to (1) employing a principled method of crossover of different topologies, (2) protecting structural innovation using speciation, and (3) incrementally growing from minimal structure. We test this claim through a series of ablation studies that demonstrate that each component is necessary to the system as a whole and to each other. What results is significantly faster learning. NEAT is also an important contribution to GAs because it shows how it is possible for evolution to both optimize and complexify solutions simultaneously, making it possible to evolve increasingly complex solutions over time, thereby strengthening the analogy with biological evolution.},
  eventtitle = {2002 {{World Congress}} on {{Computational Intelligence}} - {{WCCI}}'02},
  isbn = {978-0-7803-7282-5},
  langid = {english},
  file = {/home/dave/Zotero/storage/ABVV2KJ4/Stanley and Miikkulainen - 2002 - Efficient evolution of neural network topologies.pdf}
}

@online{tarkhanehGoldenTortoiseBeetle2021,
  title = {Golden {{Tortoise Beetle Optimizer}}: {{A Novel Nature}}-{{Inspired Meta}}-Heuristic {{Algorithm}} for {{Engineering Problems}}},
  shorttitle = {Golden {{Tortoise Beetle Optimizer}}},
  author = {Tarkhaneh, Omid and Alipour, Neda and Chapnevis, Amirahmad and Shen, Haifeng},
  date = {2021-04-03},
  eprint = {2104.01521},
  eprinttype = {arxiv},
  primaryclass = {cs, math},
  url = {http://arxiv.org/abs/2104.01521},
  urldate = {2021-08-28},
  abstract = {This paper proposes a novel nature-inspired meta-heuristic algorithm called the Golden Tortoise Beetle Optimizer (GTBO) to solve optimization problems. It mimics golden tortoise beetle's behavior of changing colors to attract opposite sex for mating and its protective strategy that uses a kind of anal fork to deter predators. The algorithm is modeled based on the beetle's dual attractiveness and survival strategy to generate new solutions for optimization problems. To measure its performance, the proposed GTBO is compared with five other nature-inspired evolutionary algorithms on 24 well-known benchmark functions investigating the trade-off between exploration and exploitation, local optima avoidance, and convergence towards the global optima is statistically significant. We particularly applied GTBO to two well-known engineering problems including the welded beam design problem and the gear train design problem. The results demonstrate that the new algorithm is more efficient than the five baseline algorithms for both problems. A sensitivity analysis is also performed to reveal different impacts of the algorithm's key control parameters and operators on GTBO's performance.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Machine Learning,Computer Science - Neural and Evolutionary Computing,Mathematics - Numerical Analysis},
  file = {/home/dave/Zotero/storage/QAXG5AVR/Tarkhaneh et al_2021_Golden Tortoise Beetle Optimizer.pdf;/home/dave/Zotero/storage/3HK58QIX/2104.html}
}

@article{tsuchiyaFuzzyRuleInduction1996,
  title = {A Fuzzy Rule Induction Method Using Genetic Algorithm},
  author = {Tsuchiya, Toshio and Maeda, Tatsushi and Matsubara, Yukihiro and Nagamachi, Mitsuo},
  date = {1996-09},
  journaltitle = {International Journal of Industrial Ergonomics},
  shortjournal = {International Journal of Industrial Ergonomics},
  volume = {18},
  number = {2-3},
  pages = {135--145},
  issn = {01698141},
  doi = {10.1016/0169-8141(95)00076-3},
  url = {https://linkinghub.elsevier.com/retrieve/pii/0169814195000763},
  urldate = {2021-04-17},
  abstract = {Kansei engineering expert systems simulate human perception for the evaluation of product design. A procedure of inducing a fuzzy decision tree for the Kansei engineering system is described for the analysis of driving comfort of automobiles. A method is proposed in this study for inducing the tree based on a genetic algorithm. Linguistic fuzzy rules are acquired by tracing the generated tree from the root node to leaf ones. The results are compared with the model of quantification theory type I which is one of the conventional statistical methods.},
  langid = {english},
  file = {/home/dave/Zotero/storage/X58Q9WZF/Tsuchiya et al. - 1996 - A fuzzy rule induction method using genetic algori.pdf}
}

@article{turingCOMPUTINGMACHINERYINTELLIGENCE1950,
  title = {I.—{{COMPUTING MACHINERY AND INTELLIGENCE}}},
  author = {Turing, A. M.},
  date = {1950-10-01},
  journaltitle = {Mind},
  volume = {LIX},
  number = {236},
  pages = {433--460},
  issn = {1460-2113, 0026-4423},
  doi = {10.1093/mind/LIX.236.433},
  url = {https://academic.oup.com/mind/article/LIX/236/433/986238},
  urldate = {2021-04-17},
  langid = {english},
  file = {/home/dave/Zotero/storage/44PQF9R9/Turing - 1950 - I.—COMPUTING MACHINERY AND INTELLIGENCE.pdf}
}

@online{UCIMachineLearning,
  title = {{{UCI Machine Learning Repository}}: {{Citation Policy}}},
  url = {https://archive.ics.uci.edu/ml/citation_policy.html},
  urldate = {2021-09-09},
  file = {/home/dave/Zotero/storage/8XDG3PZB/citation_policy.html}
}

@online{vanschorenOpenML,
  title = {{{OpenML}}},
  author = {Vanschoren, Joaquin},
  url = {https://www.openml.org},
  urldate = {2021-09-09},
  abstract = {OpenML: exploring machine learning better, together. An open science platform for machine learning.},
  langid = {english},
  organization = {{OpenML: exploring machine learning better, together.}},
  keywords = {wisconsin},
  file = {/home/dave/Zotero/storage/XY3EBJ2E/15.html}
}

@software{warnerJDWarnerScikitfuzzyScikitFuzzy2019,
  title = {{{JDWarner}}/Scikit-Fuzzy: {{Scikit}}-{{Fuzzy}} Version 0.4.2},
  shorttitle = {{{JDWarner}}/Scikit-Fuzzy},
  author = {Warner, Josh and Sexauer, Jason and scikit- {fuzzy} and {twmeggs} and {alexsavio} and Unnikrishnan, Aishwarya and Castelão, Guilherme and Pontes, Felipe Arruda and Uelwer, Tobias and {pd2f} and {laurazh} and Batista, Fernando and {alexbuy} and den Broeck, Wouter Van and Song, William and Badger, The Gitter and Pérez, Roberto Abdelkader Martínez and Power, James F. and Mishra, Himanshu and Trullols, Guillem Orellana and Hörteborn, Axel and 99991},
  options = {useprefix=true},
  date = {2019-11-14},
  doi = {10.5281/zenodo.3541386},
  url = {https://zenodo.org/record/3541386},
  urldate = {2021-09-03},
  abstract = {This minor point release brings forward compatibility with NetworkX 2.4, which removed some prior methods of interactive with directed graphs. The changes remain backward compatible. Thanks to @wouter-vdb for the fixes contained herein. The release is live on PyPi, installable via pip and will shortly be live on conda-forge.},
  organization = {{Zenodo}},
  file = {/home/dave/Zotero/storage/RCLH9KBZ/3541386.html}
}

@online{wilsonEvolvingSimplePrograms2018,
  title = {Evolving Simple Programs for Playing {{Atari}} Games},
  author = {Wilson, Dennis G. and Cussat-Blanc, Sylvain and Luga, Hervé and Miller, Julian F.},
  date = {2018-06-14},
  eprint = {1806.05695},
  eprinttype = {arxiv},
  primaryclass = {cs},
  url = {http://arxiv.org/abs/1806.05695},
  urldate = {2021-04-17},
  abstract = {Cartesian Genetic Programming (CGP) has previously shown capabilities in image processing tasks by evolving programs with a function set specialized for computer vision. A similar approach can be applied to Atari playing. Programs are evolved using mixed type CGP with a function set suited for matrix operations, including image processing, but allowing for controller behavior to emerge. While the programs are relatively small, many controllers are competitive with state of the art methods for the Atari benchmark set and require less training time. By evaluating the programs of the best evolved individuals, simple but e ective strategies can be found.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Neural and Evolutionary Computing},
  file = {/home/dave/Zotero/storage/BKPRFJU7/Wilson et al. - 2018 - Evolving simple programs for playing Atari games.pdf}
}

@book{wirsanskyHandsonGeneticAlgorithms2020,
  title = {Hands-on Genetic Algorithms with {{Python}}: Applying Genetic Algorithms to Solve Real-World Deep Learning and Artificial Intelligence Problems},
  shorttitle = {Hands-on Genetic Algorithms with {{Python}}},
  author = {Wirsansky, Eyal},
  date = {2020},
  isbn = {978-1-83855-774-4},
  langid = {english},
  annotation = {OCLC: 1190666915},
  file = {/home/dave/Zotero/storage/TMXB2GBF/Wirsansky - 2020 - Hands-on genetic algorithms with Python applying .pdf}
}

@article{wolbergMultisurfaceMethodPattern1990,
  title = {Multisurface Method of Pattern Separation for Medical Diagnosis Applied to Breast Cytology},
  author = {Wolberg, W. H. and Mangasarian, O. L.},
  date = {1990-12},
  journaltitle = {Proceedings of the National Academy of Sciences of the United States of America},
  shortjournal = {Proc Natl Acad Sci U S A},
  volume = {87},
  number = {23},
  eprint = {2251264},
  eprinttype = {pmid},
  pages = {9193--9196},
  issn = {0027-8424},
  doi = {10.1073/pnas.87.23.9193},
  abstract = {Multisurface pattern separation is a mathematical method for distinguishing between elements of two pattern sets. Each element of the pattern sets is comprised of various scalar observations. In this paper, we use the diagnosis of breast cytology to demonstrate the applicability of this method to medical diagnosis and decision making. Each of 11 cytological characteristics of breast fine-needle aspirates reported to differ between benign and malignant samples was graded 1 to 10 at the time of sample collection. Nine characteristics were found to differ significantly between benign and malignant samples. Mathematically, these values for each sample were represented by a point in a nine-dimensional space of real variables. Benign points were separated from malignant ones by planes determined by linear programming. Correct separation was accomplished in 369 of 370 samples (201 benign and 169 malignant). In the one misclassified malignant case, the fine-needle aspirate cytology was so definitely benign and the cytology of the excised cancer so definitely malignant that we believe the tumor was missed on aspiration. Our mathematical method is applicable to other medical diagnostic and decision-making problems.},
  langid = {english},
  pmcid = {PMC55130},
  keywords = {Biopsy; Needle,Breast,Breast Neoplasms,Diagnosis; Computer-Assisted,Diagnostic Errors,Female,Humans,Mathematics,Pattern Recognition; Automated},
  file = {/home/dave/Zotero/storage/3BRGI9KA/Wolberg_Mangasarian_1990_Multisurface method of pattern separation for medical diagnosis applied to.pdf}
}

@article{wolpertNoFreeLunch1997,
  title = {No Free Lunch Theorems for Optimization},
  author = {Wolpert, D.H. and Macready, W.G.},
  date = {1997-04},
  journaltitle = {IEEE Transactions on Evolutionary Computation},
  shortjournal = {IEEE Trans. Evol. Computat.},
  volume = {1},
  number = {1},
  pages = {67--82},
  issn = {1089778X},
  doi = {10.1109/4235.585893},
  url = {http://ieeexplore.ieee.org/document/585893/},
  urldate = {2021-08-29},
  abstract = {A framework is developed to explore the connection between effective optimization algorithms and the problems they are solving. A number of “no free lunch” (NFL) theorems are presented which establish that for any algorithm, any elevated performance over one class of problems is offset by performance over another class. These theorems result in a geometric interpretation of what it means for an algorithm to be well suited to an optimization problem. Applications of the NFL theorems to information-theoretic aspects of optimization and benchmark measures of performance are also presented. Other issues addressed include time-varying optimization problems and a priori “head-to-head” minimax distinctions between optimization algorithms, distinctions that result despite the NFL theorems’ enforcing of a type of uniformity over all algorithms.},
  langid = {english},
  file = {/home/dave/Zotero/storage/K2KAKNW8/Wolpert and Macready - 1997 - No free lunch theorems for optimization.pdf}
}

@article{zadehConceptLinguisticVariable1975,
  title = {The Concept of a Linguistic Variable and Its Application to Approximate Reasoning—{{I}}},
  author = {Zadeh, L. A.},
  date = {1975-01-01},
  journaltitle = {Information Sciences},
  shortjournal = {Information Sciences},
  volume = {8},
  number = {3},
  pages = {199--249},
  issn = {0020-0255},
  doi = {10.1016/0020-0255(75)90036-5},
  url = {https://www.sciencedirect.com/science/article/pii/0020025575900365},
  urldate = {2021-08-22},
  abstract = {By a linguistic variable we mean a variable whose values are words or sentences in a natural or artificial language. For example, Age is a linguistic variable if its values are linguistic rather than numerical, i.e.,young, not young, very young, quite young, old, not very old and not very young, etc., rather than 20, 21,22, 23, In more specific terms, a linguistic variable is characterized by a quintuple (L{$>$}, T(L), U,G,M) in which L is the name of the variable; T(L) is the term-set of L, that is, the collection of its linguistic values; U is a universe of discourse; G is a syntactic rule which generates the terms in T(L); and M is a semantic rule which associates with each linguistic value X its meaning, M(X), where M(X) denotes a fuzzy subset of U. The meaning of a linguistic value X is characterized by a compatibility function, c: U → [0,1], which associates with each u in U its compatibility with X. Thus, the compatibility of age 27 with young might be 0.7, while that of 35 might be 0.2. The function of the semantic rule is to relate the compatibilities of the so-called primary terms in a composite linguistic value-e.g., young and old in not very young and not very old-to the compatibility of the composite value. To this end, the hedges such as very, quite, extremely, etc., as well as the connectives and and or are treated as nonlinear operators which modify the meaning of their operands in a specified fashion. The concept of a linguistic variable provides a means of approximate characterization of phenomena which are too complex or too ill-defined to be amenable to description in conventional quantitative terms. In particular, treating Truth as a linguistic variable with values such as true, very true, completely true, not very true, untrue, etc., leads to what is called fuzzy logic. By providing a basis for approximate reasoning, that is, a mode of reasoning which is not exact nor very inexact, such logic may offer a more realistic framework for human reasoning than the traditional two-valued logic. It is shown that probabilities, too, can be treated as linguistic variables with values such as likely, very likely, unlikely, etc. Computation with linguistic probabilities requires the solution of nonlinear programs and leads to results which are imprecise to the same degree as the underlying probabilities. The main applications of the linguistic approach lie in the realm of humanistic systems-especially in the fields of artificial intelligence, linguistics, human decision processes, pattern recognition, psychology, law, medical diagnosis, information retrieval, economics and related areas.},
  langid = {english},
  file = {/home/dave/Zotero/storage/PU7MTRYX/0020025575900365.html}
}

@preamble{ "\ifdefined\DeclarePrefChars\DeclarePrefChars{'’-}\else\fi " }




<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1466" onload="init(evt)" viewBox="0 0 1200 1466" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1466" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o iris-flame-2.svg -F python classify_iris.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1455.00"> </text><svg id="frames" x="10" width="1180" total_samples="6884"><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="0.0145%" y="644" width="0.1017%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="7"/><text x="0.2645%" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (8 samples, 0.12%)</title><rect x="0.0145%" y="532" width="0.1162%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="8"/><text x="0.2645%" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="548" width="0.1162%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="8"/><text x="0.2645%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="564" width="0.1162%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="8"/><text x="0.2645%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="580" width="0.1162%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="8"/><text x="0.2645%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="596" width="0.1162%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="8"/><text x="0.2645%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="612" width="0.1162%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="8"/><text x="0.2645%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="0.0145%" y="628" width="0.1162%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="8"/><text x="0.2645%" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="420" width="0.1743%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="12"/><text x="0.2645%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="436" width="0.1743%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="12"/><text x="0.2645%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="452" width="0.1743%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="12"/><text x="0.2645%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="468" width="0.1743%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="12"/><text x="0.2645%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="484" width="0.1743%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="12"/><text x="0.2645%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="500" width="0.1743%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="12"/><text x="0.2645%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="0.0145%" y="516" width="0.1743%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="12"/><text x="0.2645%" y="526.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (14 samples, 0.20%)</title><rect x="0.0145%" y="404" width="0.2034%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="14"/><text x="0.2645%" y="414.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (9 samples, 0.13%)</title><rect x="0.2760%" y="900" width="0.1307%" height="15" fill="rgb(225,20,46)" fg:x="19" fg:w="9"/><text x="0.5260%" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (7 samples, 0.10%)</title><rect x="0.3051%" y="916" width="0.1017%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="7"/><text x="0.5551%" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (7 samples, 0.10%)</title><rect x="0.3051%" y="932" width="0.1017%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="7"/><text x="0.5551%" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (7 samples, 0.10%)</title><rect x="0.3051%" y="948" width="0.1017%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="7"/><text x="0.5551%" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (11 samples, 0.16%)</title><rect x="0.2760%" y="836" width="0.1598%" height="15" fill="rgb(249,33,26)" fg:x="19" fg:w="11"/><text x="0.5260%" y="846.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (11 samples, 0.16%)</title><rect x="0.2760%" y="852" width="0.1598%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="11"/><text x="0.5260%" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (11 samples, 0.16%)</title><rect x="0.2760%" y="868" width="0.1598%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="11"/><text x="0.5260%" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (11 samples, 0.16%)</title><rect x="0.2760%" y="884" width="0.1598%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="11"/><text x="0.5260%" y="894.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (13 samples, 0.19%)</title><rect x="0.2760%" y="804" width="0.1888%" height="15" fill="rgb(241,131,45)" fg:x="19" fg:w="13"/><text x="0.5260%" y="814.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (13 samples, 0.19%)</title><rect x="0.2760%" y="820" width="0.1888%" height="15" fill="rgb(249,31,29)" fg:x="19" fg:w="13"/><text x="0.5260%" y="830.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (17 samples, 0.25%)</title><rect x="0.2760%" y="788" width="0.2469%" height="15" fill="rgb(225,111,53)" fg:x="19" fg:w="17"/><text x="0.5260%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1028" width="0.2324%" height="15" fill="rgb(238,160,17)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1044" width="0.2324%" height="15" fill="rgb(214,148,48)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1060" width="0.2324%" height="15" fill="rgb(232,36,49)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1076" width="0.2324%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1092" width="0.2324%" height="15" fill="rgb(229,88,8)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (16 samples, 0.23%)</title><rect x="0.6246%" y="1108" width="0.2324%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1124" width="0.2324%" height="15" fill="rgb(254,191,54)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1140" width="0.2324%" height="15" fill="rgb(241,83,37)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1156" width="0.2324%" height="15" fill="rgb(233,36,39)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1172" width="0.2324%" height="15" fill="rgb(226,3,54)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1188" width="0.2324%" height="15" fill="rgb(245,192,40)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1204" width="0.2324%" height="15" fill="rgb(238,167,29)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="0.6246%" y="1220" width="0.2324%" height="15" fill="rgb(232,182,51)" fg:x="43" fg:w="16"/><text x="0.8746%" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (15 samples, 0.22%)</title><rect x="0.6392%" y="1236" width="0.2179%" height="15" fill="rgb(231,60,39)" fg:x="44" fg:w="15"/><text x="0.8892%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.6392%" y="1252" width="0.2179%" height="15" fill="rgb(208,69,12)" fg:x="44" fg:w="15"/><text x="0.8892%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.6392%" y="1268" width="0.2179%" height="15" fill="rgb(235,93,37)" fg:x="44" fg:w="15"/><text x="0.8892%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 0.20%)</title><rect x="0.6537%" y="1284" width="0.2034%" height="15" fill="rgb(213,116,39)" fg:x="45" fg:w="14"/><text x="0.9037%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 0.20%)</title><rect x="0.6537%" y="1300" width="0.2034%" height="15" fill="rgb(222,207,29)" fg:x="45" fg:w="14"/><text x="0.9037%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 0.20%)</title><rect x="0.6537%" y="1316" width="0.2034%" height="15" fill="rgb(206,96,30)" fg:x="45" fg:w="14"/><text x="0.9037%" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (14 samples, 0.20%)</title><rect x="0.8571%" y="1140" width="0.2034%" height="15" fill="rgb(218,138,4)" fg:x="59" fg:w="14"/><text x="1.1071%" y="1150.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (14 samples, 0.20%)</title><rect x="0.8571%" y="1156" width="0.2034%" height="15" fill="rgb(250,191,14)" fg:x="59" fg:w="14"/><text x="1.1071%" y="1166.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (7 samples, 0.10%)</title><rect x="0.9587%" y="1172" width="0.1017%" height="15" fill="rgb(239,60,40)" fg:x="66" fg:w="7"/><text x="1.2087%" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (59 samples, 0.86%)</title><rect x="0.2179%" y="420" width="0.8571%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="59"/><text x="0.4679%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (59 samples, 0.86%)</title><rect x="0.2179%" y="436" width="0.8571%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="59"/><text x="0.4679%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="452" width="0.8135%" height="15" fill="rgb(250,213,24)" fg:x="18" fg:w="56"/><text x="0.5115%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="468" width="0.8135%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="56"/><text x="0.5115%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="484" width="0.8135%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="56"/><text x="0.5115%" y="494.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/class_weight.py) (56 samples, 0.81%)</title><rect x="0.2615%" y="500" width="0.8135%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="56"/><text x="0.5115%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="516" width="0.8135%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="56"/><text x="0.5115%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="532" width="0.8135%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="56"/><text x="0.5115%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="548" width="0.8135%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="56"/><text x="0.5115%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="564" width="0.8135%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="56"/><text x="0.5115%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="580" width="0.8135%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="56"/><text x="0.5115%" y="590.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/validation.py) (56 samples, 0.81%)</title><rect x="0.2615%" y="596" width="0.8135%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="56"/><text x="0.5115%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="612" width="0.8135%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="56"/><text x="0.5115%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="628" width="0.8135%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="56"/><text x="0.5115%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="644" width="0.8135%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="56"/><text x="0.5115%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="660" width="0.8135%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="56"/><text x="0.5115%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (56 samples, 0.81%)</title><rect x="0.2615%" y="676" width="0.8135%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="56"/><text x="0.5115%" y="686.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (55 samples, 0.80%)</title><rect x="0.2760%" y="692" width="0.7990%" height="15" fill="rgb(247,138,52)" fg:x="19" fg:w="55"/><text x="0.5260%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (55 samples, 0.80%)</title><rect x="0.2760%" y="708" width="0.7990%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="55"/><text x="0.5260%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (55 samples, 0.80%)</title><rect x="0.2760%" y="724" width="0.7990%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="55"/><text x="0.5260%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (55 samples, 0.80%)</title><rect x="0.2760%" y="740" width="0.7990%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="55"/><text x="0.5260%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (55 samples, 0.80%)</title><rect x="0.2760%" y="756" width="0.7990%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="55"/><text x="0.5260%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (55 samples, 0.80%)</title><rect x="0.2760%" y="772" width="0.7990%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="55"/><text x="0.5260%" y="782.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (38 samples, 0.55%)</title><rect x="0.5230%" y="788" width="0.5520%" height="15" fill="rgb(251,115,12)" fg:x="36" fg:w="38"/><text x="0.7730%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (38 samples, 0.55%)</title><rect x="0.5230%" y="804" width="0.5520%" height="15" fill="rgb(240,54,50)" fg:x="36" fg:w="38"/><text x="0.7730%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (38 samples, 0.55%)</title><rect x="0.5230%" y="820" width="0.5520%" height="15" fill="rgb(233,84,52)" fg:x="36" fg:w="38"/><text x="0.7730%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (38 samples, 0.55%)</title><rect x="0.5230%" y="836" width="0.5520%" height="15" fill="rgb(207,117,47)" fg:x="36" fg:w="38"/><text x="0.7730%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (38 samples, 0.55%)</title><rect x="0.5230%" y="852" width="0.5520%" height="15" fill="rgb(249,43,39)" fg:x="36" fg:w="38"/><text x="0.7730%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (38 samples, 0.55%)</title><rect x="0.5230%" y="868" width="0.5520%" height="15" fill="rgb(209,38,44)" fg:x="36" fg:w="38"/><text x="0.7730%" y="878.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (34 samples, 0.49%)</title><rect x="0.5811%" y="884" width="0.4939%" height="15" fill="rgb(236,212,23)" fg:x="40" fg:w="34"/><text x="0.8311%" y="894.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="900" width="0.4503%" height="15" fill="rgb(242,79,21)" fg:x="43" fg:w="31"/><text x="0.8746%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="916" width="0.4503%" height="15" fill="rgb(211,96,35)" fg:x="43" fg:w="31"/><text x="0.8746%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="932" width="0.4503%" height="15" fill="rgb(253,215,40)" fg:x="43" fg:w="31"/><text x="0.8746%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="948" width="0.4503%" height="15" fill="rgb(211,81,21)" fg:x="43" fg:w="31"/><text x="0.8746%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="964" width="0.4503%" height="15" fill="rgb(208,190,38)" fg:x="43" fg:w="31"/><text x="0.8746%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="980" width="0.4503%" height="15" fill="rgb(235,213,38)" fg:x="43" fg:w="31"/><text x="0.8746%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (31 samples, 0.45%)</title><rect x="0.6246%" y="996" width="0.4503%" height="15" fill="rgb(237,122,38)" fg:x="43" fg:w="31"/><text x="0.8746%" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (31 samples, 0.45%)</title><rect x="0.6246%" y="1012" width="0.4503%" height="15" fill="rgb(244,218,35)" fg:x="43" fg:w="31"/><text x="0.8746%" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1028" width="0.2179%" height="15" fill="rgb(240,68,47)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1044" width="0.2179%" height="15" fill="rgb(210,16,53)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1060" width="0.2179%" height="15" fill="rgb(235,124,12)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1076" width="0.2179%" height="15" fill="rgb(224,169,11)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1092" width="0.2179%" height="15" fill="rgb(250,166,2)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1108" width="0.2179%" height="15" fill="rgb(242,216,29)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="0.8571%" y="1124" width="0.2179%" height="15" fill="rgb(230,116,27)" fg:x="59" fg:w="15"/><text x="1.1071%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (74 samples, 1.07%)</title><rect x="0.0145%" y="388" width="1.0750%" height="15" fill="rgb(228,99,48)" fg:x="1" fg:w="74"/><text x="0.2645%" y="398.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (60 samples, 0.87%)</title><rect x="0.2179%" y="404" width="0.8716%" height="15" fill="rgb(253,11,6)" fg:x="15" fg:w="60"/><text x="0.4679%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (75 samples, 1.09%)</title><rect x="0.0145%" y="372" width="1.0895%" height="15" fill="rgb(247,143,39)" fg:x="1" fg:w="75"/><text x="0.2645%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="116" width="1.1040%" height="15" fill="rgb(236,97,10)" fg:x="1" fg:w="76"/><text x="0.2645%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="132" width="1.1040%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="76"/><text x="0.2645%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="148" width="1.1040%" height="15" fill="rgb(216,164,2)" fg:x="1" fg:w="76"/><text x="0.2645%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="164" width="1.1040%" height="15" fill="rgb(220,129,5)" fg:x="1" fg:w="76"/><text x="0.2645%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="180" width="1.1040%" height="15" fill="rgb(242,17,10)" fg:x="1" fg:w="76"/><text x="0.2645%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="196" width="1.1040%" height="15" fill="rgb(242,107,0)" fg:x="1" fg:w="76"/><text x="0.2645%" y="206.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (76 samples, 1.10%)</title><rect x="0.0145%" y="212" width="1.1040%" height="15" fill="rgb(251,28,31)" fg:x="1" fg:w="76"/><text x="0.2645%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="228" width="1.1040%" height="15" fill="rgb(233,223,10)" fg:x="1" fg:w="76"/><text x="0.2645%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="244" width="1.1040%" height="15" fill="rgb(215,21,27)" fg:x="1" fg:w="76"/><text x="0.2645%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="260" width="1.1040%" height="15" fill="rgb(232,23,21)" fg:x="1" fg:w="76"/><text x="0.2645%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="276" width="1.1040%" height="15" fill="rgb(244,5,23)" fg:x="1" fg:w="76"/><text x="0.2645%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="292" width="1.1040%" height="15" fill="rgb(226,81,46)" fg:x="1" fg:w="76"/><text x="0.2645%" y="302.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (76 samples, 1.10%)</title><rect x="0.0145%" y="308" width="1.1040%" height="15" fill="rgb(247,70,30)" fg:x="1" fg:w="76"/><text x="0.2645%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="324" width="1.1040%" height="15" fill="rgb(212,68,19)" fg:x="1" fg:w="76"/><text x="0.2645%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="340" width="1.1040%" height="15" fill="rgb(240,187,13)" fg:x="1" fg:w="76"/><text x="0.2645%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (76 samples, 1.10%)</title><rect x="0.0145%" y="356" width="1.1040%" height="15" fill="rgb(223,113,26)" fg:x="1" fg:w="76"/><text x="0.2645%" y="366.50"></text></g><g><title>&lt;module&gt; (networkx/generators/__init__.py) (8 samples, 0.12%)</title><rect x="1.2493%" y="708" width="0.1162%" height="15" fill="rgb(206,192,2)" fg:x="86" fg:w="8"/><text x="1.4993%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="724" width="0.1162%" height="15" fill="rgb(241,108,4)" fg:x="86" fg:w="8"/><text x="1.4993%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="740" width="0.1162%" height="15" fill="rgb(247,173,49)" fg:x="86" fg:w="8"/><text x="1.4993%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="756" width="0.1162%" height="15" fill="rgb(224,114,35)" fg:x="86" fg:w="8"/><text x="1.4993%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="772" width="0.1162%" height="15" fill="rgb(245,159,27)" fg:x="86" fg:w="8"/><text x="1.4993%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="788" width="0.1162%" height="15" fill="rgb(245,172,44)" fg:x="86" fg:w="8"/><text x="1.4993%" y="798.50"></text></g><g><title>&lt;module&gt; (networkx/generators/intersection.py) (8 samples, 0.12%)</title><rect x="1.2493%" y="804" width="0.1162%" height="15" fill="rgb(236,23,11)" fg:x="86" fg:w="8"/><text x="1.4993%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="820" width="0.1162%" height="15" fill="rgb(205,117,38)" fg:x="86" fg:w="8"/><text x="1.4993%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="836" width="0.1162%" height="15" fill="rgb(237,72,25)" fg:x="86" fg:w="8"/><text x="1.4993%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="852" width="0.1162%" height="15" fill="rgb(244,70,9)" fg:x="86" fg:w="8"/><text x="1.4993%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="868" width="0.1162%" height="15" fill="rgb(217,125,39)" fg:x="86" fg:w="8"/><text x="1.4993%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="884" width="0.1162%" height="15" fill="rgb(235,36,10)" fg:x="86" fg:w="8"/><text x="1.4993%" y="894.50"></text></g><g><title>&lt;module&gt; (networkx/algorithms/__init__.py) (8 samples, 0.12%)</title><rect x="1.2493%" y="900" width="0.1162%" height="15" fill="rgb(251,123,47)" fg:x="86" fg:w="8"/><text x="1.4993%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="1.2493%" y="916" width="0.1162%" height="15" fill="rgb(221,13,13)" fg:x="86" fg:w="8"/><text x="1.4993%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="1.2638%" y="932" width="0.1017%" height="15" fill="rgb(238,131,9)" fg:x="87" fg:w="7"/><text x="1.5138%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="1.2202%" y="628" width="0.2324%" height="15" fill="rgb(211,50,8)" fg:x="84" fg:w="16"/><text x="1.4702%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="1.2347%" y="644" width="0.2179%" height="15" fill="rgb(245,182,24)" fg:x="85" fg:w="15"/><text x="1.4847%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="1.2347%" y="660" width="0.2179%" height="15" fill="rgb(242,14,37)" fg:x="85" fg:w="15"/><text x="1.4847%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 0.22%)</title><rect x="1.2347%" y="676" width="0.2179%" height="15" fill="rgb(246,228,12)" fg:x="85" fg:w="15"/><text x="1.4847%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="1.2347%" y="692" width="0.2179%" height="15" fill="rgb(213,55,15)" fg:x="85" fg:w="15"/><text x="1.4847%" y="702.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py) (18 samples, 0.26%)</title><rect x="1.2057%" y="612" width="0.2615%" height="15" fill="rgb(209,9,3)" fg:x="83" fg:w="18"/><text x="1.4557%" y="622.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="1.5689%" y="1220" width="0.1017%" height="15" fill="rgb(230,59,30)" fg:x="108" fg:w="7"/><text x="1.8189%" y="1230.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="1.5689%" y="1236" width="0.1017%" height="15" fill="rgb(209,121,21)" fg:x="108" fg:w="7"/><text x="1.8189%" y="1246.50"></text></g><g><title>__getitem__ (matplotlib/__init__.py) (19 samples, 0.28%)</title><rect x="1.5543%" y="820" width="0.2760%" height="15" fill="rgb(220,109,13)" fg:x="107" fg:w="19"/><text x="1.8043%" y="830.50"></text></g><g><title>switch_backend (matplotlib/pyplot.py) (19 samples, 0.28%)</title><rect x="1.5543%" y="836" width="0.2760%" height="15" fill="rgb(232,18,1)" fg:x="107" fg:w="19"/><text x="1.8043%" y="846.50"></text></g><g><title>switch_backend (matplotlib/pyplot.py) (19 samples, 0.28%)</title><rect x="1.5543%" y="852" width="0.2760%" height="15" fill="rgb(215,41,42)" fg:x="107" fg:w="19"/><text x="1.8043%" y="862.50"></text></g><g><title>backend_mod (matplotlib/pyplot.py) (18 samples, 0.26%)</title><rect x="1.5689%" y="868" width="0.2615%" height="15" fill="rgb(224,123,36)" fg:x="108" fg:w="18"/><text x="1.8189%" y="878.50"></text></g><g><title>import_module (importlib/__init__.py) (18 samples, 0.26%)</title><rect x="1.5689%" y="884" width="0.2615%" height="15" fill="rgb(240,125,3)" fg:x="108" fg:w="18"/><text x="1.8189%" y="894.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="900" width="0.2615%" height="15" fill="rgb(205,98,50)" fg:x="108" fg:w="18"/><text x="1.8189%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="916" width="0.2615%" height="15" fill="rgb(205,185,37)" fg:x="108" fg:w="18"/><text x="1.8189%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="932" width="0.2615%" height="15" fill="rgb(238,207,15)" fg:x="108" fg:w="18"/><text x="1.8189%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="948" width="0.2615%" height="15" fill="rgb(213,199,42)" fg:x="108" fg:w="18"/><text x="1.8189%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="964" width="0.2615%" height="15" fill="rgb(235,201,11)" fg:x="108" fg:w="18"/><text x="1.8189%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="980" width="0.2615%" height="15" fill="rgb(207,46,11)" fg:x="108" fg:w="18"/><text x="1.8189%" y="990.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/backend_qt5agg.py) (18 samples, 0.26%)</title><rect x="1.5689%" y="996" width="0.2615%" height="15" fill="rgb(241,35,35)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1012" width="0.2615%" height="15" fill="rgb(243,32,47)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1028" width="0.2615%" height="15" fill="rgb(247,202,23)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1044" width="0.2615%" height="15" fill="rgb(219,102,11)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1060" width="0.2615%" height="15" fill="rgb(243,110,44)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1076" width="0.2615%" height="15" fill="rgb(222,74,54)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1086.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/backend_qt5.py) (18 samples, 0.26%)</title><rect x="1.5689%" y="1092" width="0.2615%" height="15" fill="rgb(216,99,12)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1108" width="0.2615%" height="15" fill="rgb(226,22,26)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1124" width="0.2615%" height="15" fill="rgb(217,163,10)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1140" width="0.2615%" height="15" fill="rgb(213,25,53)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1156" width="0.2615%" height="15" fill="rgb(252,105,26)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1172" width="0.2615%" height="15" fill="rgb(220,39,43)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1182.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/qt_editor/figureoptions.py) (18 samples, 0.26%)</title><rect x="1.5689%" y="1188" width="0.2615%" height="15" fill="rgb(229,68,48)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="1.5689%" y="1204" width="0.2615%" height="15" fill="rgb(252,8,32)" fg:x="108" fg:w="18"/><text x="1.8189%" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1220" width="0.1598%" height="15" fill="rgb(223,20,43)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1236" width="0.1598%" height="15" fill="rgb(229,81,49)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1252" width="0.1598%" height="15" fill="rgb(236,28,36)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1268" width="0.1598%" height="15" fill="rgb(249,185,26)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1278.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/qt_compat.py) (11 samples, 0.16%)</title><rect x="1.6705%" y="1284" width="0.1598%" height="15" fill="rgb(249,174,33)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1294.50"></text></g><g><title>_setup_pyqt5 (matplotlib/backends/qt_compat.py) (11 samples, 0.16%)</title><rect x="1.6705%" y="1300" width="0.1598%" height="15" fill="rgb(233,201,37)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1316" width="0.1598%" height="15" fill="rgb(221,78,26)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1332" width="0.1598%" height="15" fill="rgb(250,127,30)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1348" width="0.1598%" height="15" fill="rgb(230,49,44)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1364" width="0.1598%" height="15" fill="rgb(229,67,23)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1380" width="0.1598%" height="15" fill="rgb(249,83,47)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1390.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1396" width="0.1598%" height="15" fill="rgb(215,43,3)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1406.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1412" width="0.1598%" height="15" fill="rgb(238,154,13)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 0.16%)</title><rect x="1.6705%" y="1428" width="0.1598%" height="15" fill="rgb(219,56,2)" fg:x="115" fg:w="11"/><text x="1.9205%" y="1438.50"></text></g><g><title>&lt;module&gt; (matplotlib/collections.py) (9 samples, 0.13%)</title><rect x="1.8449%" y="1028" width="0.1307%" height="15" fill="rgb(233,0,4)" fg:x="127" fg:w="9"/><text x="2.0949%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 0.17%)</title><rect x="1.8449%" y="1012" width="0.1743%" height="15" fill="rgb(235,30,7)" fg:x="127" fg:w="12"/><text x="2.0949%" y="1022.50"></text></g><g><title>&lt;module&gt; (matplotlib/colorbar.py) (14 samples, 0.20%)</title><rect x="1.8303%" y="900" width="0.2034%" height="15" fill="rgb(250,79,13)" fg:x="126" fg:w="14"/><text x="2.0803%" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="916" width="0.1888%" height="15" fill="rgb(211,146,34)" fg:x="127" fg:w="13"/><text x="2.0949%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="932" width="0.1888%" height="15" fill="rgb(228,22,38)" fg:x="127" fg:w="13"/><text x="2.0949%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="948" width="0.1888%" height="15" fill="rgb(235,168,5)" fg:x="127" fg:w="13"/><text x="2.0949%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="964" width="0.1888%" height="15" fill="rgb(221,155,16)" fg:x="127" fg:w="13"/><text x="2.0949%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="980" width="0.1888%" height="15" fill="rgb(215,215,53)" fg:x="127" fg:w="13"/><text x="2.0949%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 0.19%)</title><rect x="1.8449%" y="996" width="0.1888%" height="15" fill="rgb(223,4,10)" fg:x="127" fg:w="13"/><text x="2.0949%" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="916" width="0.1162%" height="15" fill="rgb(234,103,6)" fg:x="140" fg:w="8"/><text x="2.2837%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="932" width="0.1162%" height="15" fill="rgb(227,97,0)" fg:x="140" fg:w="8"/><text x="2.2837%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="948" width="0.1162%" height="15" fill="rgb(234,150,53)" fg:x="140" fg:w="8"/><text x="2.2837%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="964" width="0.1162%" height="15" fill="rgb(228,201,54)" fg:x="140" fg:w="8"/><text x="2.2837%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="980" width="0.1162%" height="15" fill="rgb(222,22,37)" fg:x="140" fg:w="8"/><text x="2.2837%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="996" width="0.1162%" height="15" fill="rgb(237,53,32)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1012" width="0.1162%" height="15" fill="rgb(233,25,53)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1022.50"></text></g><g><title>&lt;module&gt; (matplotlib/projections/__init__.py) (8 samples, 0.12%)</title><rect x="2.0337%" y="1028" width="0.1162%" height="15" fill="rgb(210,40,34)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1044" width="0.1162%" height="15" fill="rgb(241,220,44)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1060" width="0.1162%" height="15" fill="rgb(235,28,35)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1076" width="0.1162%" height="15" fill="rgb(210,56,17)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1092" width="0.1162%" height="15" fill="rgb(224,130,29)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1108" width="0.1162%" height="15" fill="rgb(235,212,8)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1124" width="0.1162%" height="15" fill="rgb(223,33,50)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1140" width="0.1162%" height="15" fill="rgb(219,149,13)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1150.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/__init__.py) (8 samples, 0.12%)</title><rect x="2.0337%" y="1156" width="0.1162%" height="15" fill="rgb(250,156,29)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1172" width="0.1162%" height="15" fill="rgb(216,193,19)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1188" width="0.1162%" height="15" fill="rgb(216,135,14)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1204" width="0.1162%" height="15" fill="rgb(241,47,5)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1220" width="0.1162%" height="15" fill="rgb(233,42,35)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="2.0337%" y="1236" width="0.1162%" height="15" fill="rgb(231,13,6)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1246.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/_subplots.py) (8 samples, 0.12%)</title><rect x="2.0337%" y="1252" width="0.1162%" height="15" fill="rgb(207,181,40)" fg:x="140" fg:w="8"/><text x="2.2837%" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 0.33%)</title><rect x="1.8303%" y="820" width="0.3341%" height="15" fill="rgb(254,173,49)" fg:x="126" fg:w="23"/><text x="2.0803%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 0.33%)</title><rect x="1.8303%" y="836" width="0.3341%" height="15" fill="rgb(221,1,38)" fg:x="126" fg:w="23"/><text x="2.0803%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 0.33%)</title><rect x="1.8303%" y="852" width="0.3341%" height="15" fill="rgb(206,124,46)" fg:x="126" fg:w="23"/><text x="2.0803%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (23 samples, 0.33%)</title><rect x="1.8303%" y="868" width="0.3341%" height="15" fill="rgb(249,21,11)" fg:x="126" fg:w="23"/><text x="2.0803%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (23 samples, 0.33%)</title><rect x="1.8303%" y="884" width="0.3341%" height="15" fill="rgb(222,201,40)" fg:x="126" fg:w="23"/><text x="2.0803%" y="894.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py) (9 samples, 0.13%)</title><rect x="2.0337%" y="900" width="0.1307%" height="15" fill="rgb(235,61,29)" fg:x="140" fg:w="9"/><text x="2.2837%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (44 samples, 0.64%)</title><rect x="1.5543%" y="788" width="0.6392%" height="15" fill="rgb(219,207,3)" fg:x="107" fg:w="44"/><text x="1.8043%" y="798.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py) (44 samples, 0.64%)</title><rect x="1.5543%" y="804" width="0.6392%" height="15" fill="rgb(222,56,46)" fg:x="107" fg:w="44"/><text x="1.8043%" y="814.50"></text></g><g><title>&lt;module&gt; (classifier_cv.py) (75 samples, 1.09%)</title><rect x="1.1185%" y="164" width="1.0895%" height="15" fill="rgb(239,76,54)" fg:x="77" fg:w="75"/><text x="1.3685%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="180" width="1.0023%" height="15" fill="rgb(231,124,27)" fg:x="83" fg:w="69"/><text x="1.4557%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="196" width="1.0023%" height="15" fill="rgb(249,195,6)" fg:x="83" fg:w="69"/><text x="1.4557%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="212" width="1.0023%" height="15" fill="rgb(237,174,47)" fg:x="83" fg:w="69"/><text x="1.4557%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="228" width="1.0023%" height="15" fill="rgb(206,201,31)" fg:x="83" fg:w="69"/><text x="1.4557%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="244" width="1.0023%" height="15" fill="rgb(231,57,52)" fg:x="83" fg:w="69"/><text x="1.4557%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="260" width="1.0023%" height="15" fill="rgb(248,177,22)" fg:x="83" fg:w="69"/><text x="1.4557%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="276" width="1.0023%" height="15" fill="rgb(215,211,37)" fg:x="83" fg:w="69"/><text x="1.4557%" y="286.50"></text></g><g><title>&lt;module&gt; (evofuzzy/fuzzyclassifier.py) (69 samples, 1.00%)</title><rect x="1.2057%" y="292" width="1.0023%" height="15" fill="rgb(241,128,51)" fg:x="83" fg:w="69"/><text x="1.4557%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="308" width="1.0023%" height="15" fill="rgb(227,165,31)" fg:x="83" fg:w="69"/><text x="1.4557%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="324" width="1.0023%" height="15" fill="rgb(228,167,24)" fg:x="83" fg:w="69"/><text x="1.4557%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="340" width="1.0023%" height="15" fill="rgb(228,143,12)" fg:x="83" fg:w="69"/><text x="1.4557%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="356" width="1.0023%" height="15" fill="rgb(249,149,8)" fg:x="83" fg:w="69"/><text x="1.4557%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="372" width="1.0023%" height="15" fill="rgb(243,35,44)" fg:x="83" fg:w="69"/><text x="1.4557%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="388" width="1.0023%" height="15" fill="rgb(246,89,9)" fg:x="83" fg:w="69"/><text x="1.4557%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="404" width="1.0023%" height="15" fill="rgb(233,213,13)" fg:x="83" fg:w="69"/><text x="1.4557%" y="414.50"></text></g><g><title>&lt;module&gt; (skfuzzy/control/__init__.py) (69 samples, 1.00%)</title><rect x="1.2057%" y="420" width="1.0023%" height="15" fill="rgb(233,141,41)" fg:x="83" fg:w="69"/><text x="1.4557%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="436" width="1.0023%" height="15" fill="rgb(239,167,4)" fg:x="83" fg:w="69"/><text x="1.4557%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="452" width="1.0023%" height="15" fill="rgb(209,217,16)" fg:x="83" fg:w="69"/><text x="1.4557%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="468" width="1.0023%" height="15" fill="rgb(219,88,35)" fg:x="83" fg:w="69"/><text x="1.4557%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="484" width="1.0023%" height="15" fill="rgb(220,193,23)" fg:x="83" fg:w="69"/><text x="1.4557%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="500" width="1.0023%" height="15" fill="rgb(230,90,52)" fg:x="83" fg:w="69"/><text x="1.4557%" y="510.50"></text></g><g><title>&lt;module&gt; (skfuzzy/control/antecedent_consequent.py) (69 samples, 1.00%)</title><rect x="1.2057%" y="516" width="1.0023%" height="15" fill="rgb(252,106,19)" fg:x="83" fg:w="69"/><text x="1.4557%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="532" width="1.0023%" height="15" fill="rgb(206,74,20)" fg:x="83" fg:w="69"/><text x="1.4557%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="548" width="1.0023%" height="15" fill="rgb(230,138,44)" fg:x="83" fg:w="69"/><text x="1.4557%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="564" width="1.0023%" height="15" fill="rgb(235,182,43)" fg:x="83" fg:w="69"/><text x="1.4557%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="580" width="1.0023%" height="15" fill="rgb(242,16,51)" fg:x="83" fg:w="69"/><text x="1.4557%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="1.2057%" y="596" width="1.0023%" height="15" fill="rgb(248,9,4)" fg:x="83" fg:w="69"/><text x="1.4557%" y="606.50"></text></g><g><title>&lt;module&gt; (skfuzzy/control/fuzzyvariable.py) (51 samples, 0.74%)</title><rect x="1.4672%" y="612" width="0.7408%" height="15" fill="rgb(210,31,22)" fg:x="101" fg:w="51"/><text x="1.7172%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="628" width="0.7408%" height="15" fill="rgb(239,54,39)" fg:x="101" fg:w="51"/><text x="1.7172%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="644" width="0.7408%" height="15" fill="rgb(230,99,41)" fg:x="101" fg:w="51"/><text x="1.7172%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="660" width="0.7408%" height="15" fill="rgb(253,106,12)" fg:x="101" fg:w="51"/><text x="1.7172%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="676" width="0.7408%" height="15" fill="rgb(213,46,41)" fg:x="101" fg:w="51"/><text x="1.7172%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="692" width="0.7408%" height="15" fill="rgb(215,133,35)" fg:x="101" fg:w="51"/><text x="1.7172%" y="702.50"></text></g><g><title>&lt;module&gt; (skfuzzy/control/visualization.py) (51 samples, 0.74%)</title><rect x="1.4672%" y="708" width="0.7408%" height="15" fill="rgb(213,28,5)" fg:x="101" fg:w="51"/><text x="1.7172%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="724" width="0.7408%" height="15" fill="rgb(215,77,49)" fg:x="101" fg:w="51"/><text x="1.7172%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (51 samples, 0.74%)</title><rect x="1.4672%" y="740" width="0.7408%" height="15" fill="rgb(248,100,22)" fg:x="101" fg:w="51"/><text x="1.7172%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (45 samples, 0.65%)</title><rect x="1.5543%" y="756" width="0.6537%" height="15" fill="rgb(208,67,9)" fg:x="107" fg:w="45"/><text x="1.8043%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (45 samples, 0.65%)</title><rect x="1.5543%" y="772" width="0.6537%" height="15" fill="rgb(219,133,21)" fg:x="107" fg:w="45"/><text x="1.8043%" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (9 samples, 0.13%)</title><rect x="2.2661%" y="260" width="0.1307%" height="15" fill="rgb(246,46,29)" fg:x="156" fg:w="9"/><text x="2.5161%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.13%)</title><rect x="2.2661%" y="276" width="0.1307%" height="15" fill="rgb(246,185,52)" fg:x="156" fg:w="9"/><text x="2.5161%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.13%)</title><rect x="2.2661%" y="292" width="0.1307%" height="15" fill="rgb(252,136,11)" fg:x="156" fg:w="9"/><text x="2.5161%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.13%)</title><rect x="2.2661%" y="308" width="0.1307%" height="15" fill="rgb(219,138,53)" fg:x="156" fg:w="9"/><text x="2.5161%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.13%)</title><rect x="2.2661%" y="324" width="0.1307%" height="15" fill="rgb(211,51,23)" fg:x="156" fg:w="9"/><text x="2.5161%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.13%)</title><rect x="2.2661%" y="340" width="0.1307%" height="15" fill="rgb(247,221,28)" fg:x="156" fg:w="9"/><text x="2.5161%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (7 samples, 0.10%)</title><rect x="2.2952%" y="356" width="0.1017%" height="15" fill="rgb(251,222,45)" fg:x="158" fg:w="7"/><text x="2.5452%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="372" width="0.1017%" height="15" fill="rgb(217,162,53)" fg:x="158" fg:w="7"/><text x="2.5452%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="388" width="0.1017%" height="15" fill="rgb(229,93,14)" fg:x="158" fg:w="7"/><text x="2.5452%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="404" width="0.1017%" height="15" fill="rgb(209,67,49)" fg:x="158" fg:w="7"/><text x="2.5452%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="420" width="0.1017%" height="15" fill="rgb(213,87,29)" fg:x="158" fg:w="7"/><text x="2.5452%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="436" width="0.1017%" height="15" fill="rgb(205,151,52)" fg:x="158" fg:w="7"/><text x="2.5452%" y="446.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (7 samples, 0.10%)</title><rect x="2.2952%" y="452" width="0.1017%" height="15" fill="rgb(253,215,39)" fg:x="158" fg:w="7"/><text x="2.5452%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="468" width="0.1017%" height="15" fill="rgb(221,220,41)" fg:x="158" fg:w="7"/><text x="2.5452%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="484" width="0.1017%" height="15" fill="rgb(218,133,21)" fg:x="158" fg:w="7"/><text x="2.5452%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="500" width="0.1017%" height="15" fill="rgb(221,193,43)" fg:x="158" fg:w="7"/><text x="2.5452%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="516" width="0.1017%" height="15" fill="rgb(240,128,52)" fg:x="158" fg:w="7"/><text x="2.5452%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.2952%" y="532" width="0.1017%" height="15" fill="rgb(253,114,12)" fg:x="158" fg:w="7"/><text x="2.5452%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 0.28%)</title><rect x="2.2080%" y="244" width="0.2760%" height="15" fill="rgb(215,223,47)" fg:x="152" fg:w="19"/><text x="2.4580%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (20 samples, 0.29%)</title><rect x="2.2080%" y="164" width="0.2905%" height="15" fill="rgb(248,225,23)" fg:x="152" fg:w="20"/><text x="2.4580%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 0.29%)</title><rect x="2.2080%" y="180" width="0.2905%" height="15" fill="rgb(250,108,0)" fg:x="152" fg:w="20"/><text x="2.4580%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 0.29%)</title><rect x="2.2080%" y="196" width="0.2905%" height="15" fill="rgb(228,208,7)" fg:x="152" fg:w="20"/><text x="2.4580%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 0.29%)</title><rect x="2.2080%" y="212" width="0.2905%" height="15" fill="rgb(244,45,10)" fg:x="152" fg:w="20"/><text x="2.4580%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 0.29%)</title><rect x="2.2080%" y="228" width="0.2905%" height="15" fill="rgb(207,125,25)" fg:x="152" fg:w="20"/><text x="2.4580%" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (178 samples, 2.59%)</title><rect x="0.0145%" y="84" width="2.5857%" height="15" fill="rgb(210,195,18)" fg:x="1" fg:w="178"/><text x="0.2645%" y="94.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (178 samples, 2.59%)</title><rect x="0.0145%" y="100" width="2.5857%" height="15" fill="rgb(249,80,12)" fg:x="1" fg:w="178"/><text x="0.2645%" y="110.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (102 samples, 1.48%)</title><rect x="1.1185%" y="116" width="1.4817%" height="15" fill="rgb(221,65,9)" fg:x="77" fg:w="102"/><text x="1.3685%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (102 samples, 1.48%)</title><rect x="1.1185%" y="132" width="1.4817%" height="15" fill="rgb(235,49,36)" fg:x="77" fg:w="102"/><text x="1.3685%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (102 samples, 1.48%)</title><rect x="1.1185%" y="148" width="1.4817%" height="15" fill="rgb(225,32,20)" fg:x="77" fg:w="102"/><text x="1.3685%" y="158.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (7 samples, 0.10%)</title><rect x="2.4985%" y="164" width="0.1017%" height="15" fill="rgb(215,141,46)" fg:x="172" fg:w="7"/><text x="2.7485%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.4985%" y="180" width="0.1017%" height="15" fill="rgb(250,160,47)" fg:x="172" fg:w="7"/><text x="2.7485%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.4985%" y="196" width="0.1017%" height="15" fill="rgb(216,222,40)" fg:x="172" fg:w="7"/><text x="2.7485%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.4985%" y="212" width="0.1017%" height="15" fill="rgb(234,217,39)" fg:x="172" fg:w="7"/><text x="2.7485%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.10%)</title><rect x="2.4985%" y="228" width="0.1017%" height="15" fill="rgb(207,178,40)" fg:x="172" fg:w="7"/><text x="2.7485%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="2.4985%" y="244" width="0.1017%" height="15" fill="rgb(221,136,13)" fg:x="172" fg:w="7"/><text x="2.7485%" y="254.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;) (11 samples, 0.16%)</title><rect x="3.1087%" y="196" width="0.1598%" height="15" fill="rgb(249,199,10)" fg:x="214" fg:w="11"/><text x="3.3587%" y="206.50"></text></g><g><title>__init__ (skfuzzy/control/rule.py) (7 samples, 0.10%)</title><rect x="3.1668%" y="212" width="0.1017%" height="15" fill="rgb(249,222,13)" fg:x="218" fg:w="7"/><text x="3.4168%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (evofuzzy/fuzzyclassifier.py) (42 samples, 0.61%)</title><rect x="2.7891%" y="164" width="0.6101%" height="15" fill="rgb(244,185,38)" fg:x="192" fg:w="42"/><text x="3.0391%" y="174.50"></text></g><g><title>compile (deap/gp.py) (42 samples, 0.61%)</title><rect x="2.7891%" y="180" width="0.6101%" height="15" fill="rgb(236,202,9)" fg:x="192" fg:w="42"/><text x="3.0391%" y="190.50"></text></g><g><title>__str__ (deap/gp.py) (9 samples, 0.13%)</title><rect x="3.2684%" y="196" width="0.1307%" height="15" fill="rgb(250,229,37)" fg:x="225" fg:w="9"/><text x="3.5184%" y="206.50"></text></g><g><title>_slice (pandas/core/generic.py) (13 samples, 0.19%)</title><rect x="3.4573%" y="212" width="0.1888%" height="15" fill="rgb(206,174,23)" fg:x="238" fg:w="13"/><text x="3.7073%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py) (10 samples, 0.15%)</title><rect x="3.6607%" y="244" width="0.1453%" height="15" fill="rgb(211,33,43)" fg:x="252" fg:w="10"/><text x="3.9107%" y="254.50"></text></g><g><title>_slice (pandas/core/series.py) (14 samples, 0.20%)</title><rect x="3.6461%" y="212" width="0.2034%" height="15" fill="rgb(245,58,50)" fg:x="251" fg:w="14"/><text x="3.8961%" y="222.50"></text></g><g><title>_get_values (pandas/core/series.py) (13 samples, 0.19%)</title><rect x="3.6607%" y="228" width="0.1888%" height="15" fill="rgb(244,68,36)" fg:x="252" fg:w="13"/><text x="3.9107%" y="238.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py) (30 samples, 0.44%)</title><rect x="3.4282%" y="180" width="0.4358%" height="15" fill="rgb(232,229,15)" fg:x="236" fg:w="30"/><text x="3.6782%" y="190.50"></text></g><g><title>_get_slice_axis (pandas/core/indexing.py) (30 samples, 0.44%)</title><rect x="3.4282%" y="196" width="0.4358%" height="15" fill="rgb(254,30,23)" fg:x="236" fg:w="30"/><text x="3.6782%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py) (33 samples, 0.48%)</title><rect x="3.3992%" y="164" width="0.4794%" height="15" fill="rgb(235,160,14)" fg:x="234" fg:w="33"/><text x="3.6492%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (evofuzzy/fuzzyclassifier.py) (7 samples, 0.10%)</title><rect x="4.5032%" y="180" width="0.1017%" height="15" fill="rgb(212,155,44)" fg:x="310" fg:w="7"/><text x="4.7532%" y="190.50"></text></g><g><title>_maybe_cast_data_without_dtype (pandas/core/indexes/base.py) (16 samples, 0.23%)</title><rect x="5.1424%" y="292" width="0.2324%" height="15" fill="rgb(226,2,50)" fg:x="354" fg:w="16"/><text x="5.3924%" y="302.50"></text></g><g><title>_maybe_cast_listlike_indexer (pandas/core/indexes/base.py) (28 samples, 0.41%)</title><rect x="4.9971%" y="244" width="0.4067%" height="15" fill="rgb(234,177,6)" fg:x="344" fg:w="28"/><text x="5.2471%" y="254.50"></text></g><g><title>ensure_index (pandas/core/indexes/base.py) (28 samples, 0.41%)</title><rect x="4.9971%" y="260" width="0.4067%" height="15" fill="rgb(217,24,9)" fg:x="344" fg:w="28"/><text x="5.2471%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py) (27 samples, 0.39%)</title><rect x="5.0116%" y="276" width="0.3922%" height="15" fill="rgb(220,13,46)" fg:x="345" fg:w="27"/><text x="5.2616%" y="286.50"></text></g><g><title>get_indexer_for (pandas/core/indexes/base.py) (40 samples, 0.58%)</title><rect x="4.8809%" y="212" width="0.5811%" height="15" fill="rgb(239,221,27)" fg:x="336" fg:w="40"/><text x="5.1309%" y="222.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py) (39 samples, 0.57%)</title><rect x="4.8954%" y="228" width="0.5665%" height="15" fill="rgb(222,198,25)" fg:x="337" fg:w="39"/><text x="5.1454%" y="238.50"></text></g><g><title>_maybe_cast_data_without_dtype (pandas/core/indexes/base.py) (16 samples, 0.23%)</title><rect x="5.5491%" y="260" width="0.2324%" height="15" fill="rgb(211,99,13)" fg:x="382" fg:w="16"/><text x="5.7991%" y="270.50"></text></g><g><title>ensure_index (pandas/core/indexes/base.py) (22 samples, 0.32%)</title><rect x="5.4910%" y="228" width="0.3196%" height="15" fill="rgb(232,111,31)" fg:x="378" fg:w="22"/><text x="5.7410%" y="238.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py) (21 samples, 0.31%)</title><rect x="5.5055%" y="244" width="0.3051%" height="15" fill="rgb(245,82,37)" fg:x="379" fg:w="21"/><text x="5.7555%" y="254.50"></text></g><g><title>_get_listlike_indexer (pandas/core/indexing.py) (93 samples, 1.35%)</title><rect x="4.6630%" y="196" width="1.3510%" height="15" fill="rgb(227,149,46)" fg:x="321" fg:w="93"/><text x="4.9130%" y="206.50"></text></g><g><title>reindex (pandas/core/indexes/base.py) (38 samples, 0.55%)</title><rect x="5.4619%" y="212" width="0.5520%" height="15" fill="rgb(218,36,50)" fg:x="376" fg:w="38"/><text x="5.7119%" y="222.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py) (9 samples, 0.13%)</title><rect x="5.8832%" y="228" width="0.1307%" height="15" fill="rgb(226,80,48)" fg:x="405" fg:w="9"/><text x="6.1332%" y="238.50"></text></g><g><title>blknos (pandas/core/internals/managers.py) (15 samples, 0.22%)</title><rect x="6.3771%" y="276" width="0.2179%" height="15" fill="rgb(238,224,15)" fg:x="439" fg:w="15"/><text x="6.6271%" y="286.50"></text></g><g><title>_rebuild_blknos_and_blklocs (pandas/core/internals/managers.py) (15 samples, 0.22%)</title><rect x="6.3771%" y="292" width="0.2179%" height="15" fill="rgb(241,136,10)" fg:x="439" fg:w="15"/><text x="6.6271%" y="302.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py) (35 samples, 0.51%)</title><rect x="6.2754%" y="260" width="0.5084%" height="15" fill="rgb(208,32,45)" fg:x="432" fg:w="35"/><text x="6.5254%" y="270.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py) (37 samples, 0.54%)</title><rect x="6.2609%" y="244" width="0.5375%" height="15" fill="rgb(207,135,9)" fg:x="431" fg:w="37"/><text x="6.5109%" y="254.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py) (59 samples, 0.86%)</title><rect x="6.0139%" y="196" width="0.8571%" height="15" fill="rgb(206,86,44)" fg:x="414" fg:w="59"/><text x="6.2639%" y="206.50"></text></g><g><title>take (pandas/core/generic.py) (55 samples, 0.80%)</title><rect x="6.0721%" y="212" width="0.7990%" height="15" fill="rgb(245,177,15)" fg:x="418" fg:w="55"/><text x="6.3221%" y="222.50"></text></g><g><title>take (pandas/core/internals/managers.py) (49 samples, 0.71%)</title><rect x="6.1592%" y="228" width="0.7118%" height="15" fill="rgb(206,64,50)" fg:x="424" fg:w="49"/><text x="6.4092%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/frame.py) (157 samples, 2.28%)</title><rect x="4.6049%" y="180" width="2.2807%" height="15" fill="rgb(234,36,40)" fg:x="317" fg:w="157"/><text x="4.8549%" y="190.50">_..</text></g><g><title>_update_unique_id (skfuzzy/control/controlsystem.py) (9 samples, 0.13%)</title><rect x="6.9727%" y="196" width="0.1307%" height="15" fill="rgb(213,64,8)" fg:x="480" fg:w="9"/><text x="7.2227%" y="206.50"></text></g><g><title>_init_state (skfuzzy/control/controlsystem.py) (13 samples, 0.19%)</title><rect x="7.2051%" y="228" width="0.1888%" height="15" fill="rgb(210,75,36)" fg:x="496" fg:w="13"/><text x="7.4551%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (10 samples, 0.15%)</title><rect x="7.5537%" y="260" width="0.1453%" height="15" fill="rgb(229,88,21)" fg:x="520" fg:w="10"/><text x="7.8037%" y="270.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (8 samples, 0.12%)</title><rect x="7.6990%" y="260" width="0.1162%" height="15" fill="rgb(252,204,47)" fg:x="530" fg:w="8"/><text x="7.9490%" y="270.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (27 samples, 0.39%)</title><rect x="7.4375%" y="244" width="0.3922%" height="15" fill="rgb(208,77,27)" fg:x="512" fg:w="27"/><text x="7.6875%" y="254.50"></text></g><g><title>__call__ (networkx/classes/reportviews.py) (7 samples, 0.10%)</title><rect x="8.0331%" y="276" width="0.1017%" height="15" fill="rgb(221,76,26)" fg:x="553" fg:w="7"/><text x="8.2831%" y="286.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (22 samples, 0.32%)</title><rect x="8.1784%" y="276" width="0.3196%" height="15" fill="rgb(225,139,18)" fg:x="563" fg:w="22"/><text x="8.4284%" y="286.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (35 samples, 0.51%)</title><rect x="8.4980%" y="276" width="0.5084%" height="15" fill="rgb(230,137,11)" fg:x="585" fg:w="35"/><text x="8.7480%" y="286.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (76 samples, 1.10%)</title><rect x="7.9750%" y="260" width="1.1040%" height="15" fill="rgb(212,28,1)" fg:x="549" fg:w="76"/><text x="8.2250%" y="270.50"></text></g><g><title>__iter__ (skfuzzy/control/controlsystem.py) (146 samples, 2.12%)</title><rect x="7.1470%" y="212" width="2.1209%" height="15" fill="rgb(248,164,17)" fg:x="492" fg:w="146"/><text x="7.3970%" y="222.50">_..</text></g><g><title>_process_rules (skfuzzy/control/controlsystem.py) (129 samples, 1.87%)</title><rect x="7.3940%" y="228" width="1.8739%" height="15" fill="rgb(222,171,42)" fg:x="509" fg:w="129"/><text x="7.6440%" y="238.50">_..</text></g><g><title>graph (skfuzzy/control/rule.py) (99 samples, 1.44%)</title><rect x="7.8298%" y="244" width="1.4381%" height="15" fill="rgb(243,84,45)" fg:x="539" fg:w="99"/><text x="8.0798%" y="254.50"></text></g><g><title>graph (skfuzzy/control/antecedent_consequent.py) (13 samples, 0.19%)</title><rect x="9.0790%" y="260" width="0.1888%" height="15" fill="rgb(252,49,23)" fg:x="625" fg:w="13"/><text x="9.3290%" y="270.50"></text></g><g><title>add_edge (networkx/classes/digraph.py) (10 samples, 0.15%)</title><rect x="9.1226%" y="276" width="0.1453%" height="15" fill="rgb(215,19,7)" fg:x="628" fg:w="10"/><text x="9.3726%" y="286.50"></text></g><g><title>add_edges_from (networkx/classes/graph.py) (24 samples, 0.35%)</title><rect x="9.6020%" y="228" width="0.3486%" height="15" fill="rgb(238,81,41)" fg:x="661" fg:w="24"/><text x="9.8520%" y="238.50"></text></g><g><title>add_rule_n (skfuzzy/control/controlsystem.py) (85 samples, 1.23%)</title><rect x="9.2679%" y="212" width="1.2347%" height="15" fill="rgb(210,199,37)" fg:x="638" fg:w="85"/><text x="9.5179%" y="222.50"></text></g><g><title>graph_n (skfuzzy/control/rule.py) (32 samples, 0.46%)</title><rect x="10.0378%" y="228" width="0.4648%" height="15" fill="rgb(244,192,49)" fg:x="691" fg:w="32"/><text x="10.2878%" y="238.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (18 samples, 0.26%)</title><rect x="10.6479%" y="228" width="0.2615%" height="15" fill="rgb(226,211,11)" fg:x="733" fg:w="18"/><text x="10.8979%" y="238.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (18 samples, 0.26%)</title><rect x="10.9094%" y="228" width="0.2615%" height="15" fill="rgb(236,162,54)" fg:x="751" fg:w="18"/><text x="11.1594%" y="238.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (51 samples, 0.74%)</title><rect x="10.5026%" y="212" width="0.7408%" height="15" fill="rgb(220,229,9)" fg:x="723" fg:w="51"/><text x="10.7526%" y="222.50"></text></g><g><title>__call__ (networkx/classes/reportviews.py) (8 samples, 0.12%)</title><rect x="11.7083%" y="244" width="0.1162%" height="15" fill="rgb(250,87,22)" fg:x="806" fg:w="8"/><text x="11.9583%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (networkx/classes/reportviews.py) (16 samples, 0.23%)</title><rect x="12.2022%" y="260" width="0.2324%" height="15" fill="rgb(239,43,17)" fg:x="840" fg:w="16"/><text x="12.4522%" y="270.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (42 samples, 0.61%)</title><rect x="11.8536%" y="244" width="0.6101%" height="15" fill="rgb(231,177,25)" fg:x="816" fg:w="42"/><text x="12.1036%" y="254.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (32 samples, 0.46%)</title><rect x="12.4637%" y="244" width="0.4648%" height="15" fill="rgb(219,179,1)" fg:x="858" fg:w="32"/><text x="12.7137%" y="254.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (106 samples, 1.54%)</title><rect x="11.4759%" y="228" width="1.5398%" height="15" fill="rgb(238,219,53)" fg:x="790" fg:w="106"/><text x="11.7259%" y="238.50"></text></g><g><title>__init__ (skfuzzy/control/controlsystem.py) (440 samples, 6.39%)</title><rect x="6.8855%" y="180" width="6.3916%" height="15" fill="rgb(232,167,36)" fg:x="474" fg:w="440"/><text x="7.1355%" y="190.50">__init__..</text></g><g><title>addrule (skfuzzy/control/controlsystem.py) (425 samples, 6.17%)</title><rect x="7.1034%" y="196" width="6.1737%" height="15" fill="rgb(244,19,51)" fg:x="489" fg:w="425"/><text x="7.3534%" y="206.50">addrule ..</text></g><g><title>graph (skfuzzy/control/rule.py) (140 samples, 2.03%)</title><rect x="11.2435%" y="212" width="2.0337%" height="15" fill="rgb(224,6,22)" fg:x="774" fg:w="140"/><text x="11.4935%" y="222.50">g..</text></g><g><title>graph (skfuzzy/control/antecedent_consequent.py) (18 samples, 0.26%)</title><rect x="13.0157%" y="228" width="0.2615%" height="15" fill="rgb(224,145,5)" fg:x="896" fg:w="18"/><text x="13.2657%" y="238.50"></text></g><g><title>add_edge (networkx/classes/digraph.py) (12 samples, 0.17%)</title><rect x="13.1028%" y="244" width="0.1743%" height="15" fill="rgb(234,130,49)" fg:x="902" fg:w="12"/><text x="13.3528%" y="254.50"></text></g><g><title>_asdict (collections/__init__.py) (9 samples, 0.13%)</title><rect x="13.3207%" y="180" width="0.1307%" height="15" fill="rgb(254,6,2)" fg:x="917" fg:w="9"/><text x="13.5707%" y="190.50"></text></g><g><title>_make (collections/__init__.py) (8 samples, 0.12%)</title><rect x="13.4515%" y="180" width="0.1162%" height="15" fill="rgb(208,96,46)" fg:x="926" fg:w="8"/><text x="13.7015%" y="190.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (85 samples, 1.23%)</title><rect x="13.5677%" y="180" width="1.2347%" height="15" fill="rgb(239,3,39)" fg:x="934" fg:w="85"/><text x="13.8177%" y="190.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (76 samples, 1.10%)</title><rect x="13.6984%" y="196" width="1.1040%" height="15" fill="rgb(233,210,1)" fg:x="943" fg:w="76"/><text x="13.9484%" y="206.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (68 samples, 0.99%)</title><rect x="13.8146%" y="212" width="0.9878%" height="15" fill="rgb(244,137,37)" fg:x="951" fg:w="68"/><text x="14.0646%" y="222.50"></text></g><g><title>_wrapit (numpy/core/fromnumeric.py) (59 samples, 0.86%)</title><rect x="13.9454%" y="228" width="0.8571%" height="15" fill="rgb(240,136,2)" fg:x="960" fg:w="59"/><text x="14.1954%" y="238.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (13 samples, 0.19%)</title><rect x="16.8216%" y="196" width="0.1888%" height="15" fill="rgb(239,18,37)" fg:x="1158" fg:w="13"/><text x="17.0716%" y="206.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (143 samples, 2.08%)</title><rect x="17.0105%" y="196" width="2.0773%" height="15" fill="rgb(218,185,22)" fg:x="1171" fg:w="143"/><text x="17.2605%" y="206.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="18.8263%" y="212" width="0.2615%" height="15" fill="rgb(225,218,4)" fg:x="1296" fg:w="18"/><text x="19.0763%" y="222.50"></text></g><g><title>__init__ (skfuzzy/control/controlsystem.py) (97 samples, 1.41%)</title><rect x="19.0877%" y="196" width="1.4091%" height="15" fill="rgb(230,182,32)" fg:x="1314" fg:w="97"/><text x="19.3377%" y="206.50"></text></g><g><title>add_edge (networkx/classes/digraph.py) (9 samples, 0.13%)</title><rect x="20.7728%" y="228" width="0.1307%" height="15" fill="rgb(242,56,43)" fg:x="1430" fg:w="9"/><text x="21.0228%" y="238.50"></text></g><g><title>_init_state (skfuzzy/control/controlsystem.py) (15 samples, 0.22%)</title><rect x="20.7147%" y="212" width="0.2179%" height="15" fill="rgb(233,99,24)" fg:x="1426" fg:w="15"/><text x="20.9647%" y="222.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (33 samples, 0.48%)</title><rect x="21.2958%" y="244" width="0.4794%" height="15" fill="rgb(234,209,42)" fg:x="1466" fg:w="33"/><text x="21.5458%" y="254.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (33 samples, 0.48%)</title><rect x="21.7751%" y="244" width="0.4794%" height="15" fill="rgb(227,7,12)" fg:x="1499" fg:w="33"/><text x="22.0251%" y="254.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (88 samples, 1.28%)</title><rect x="21.0779%" y="228" width="1.2783%" height="15" fill="rgb(245,203,43)" fg:x="1451" fg:w="88"/><text x="21.3279%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (networkx/classes/reportviews.py) (9 samples, 0.13%)</title><rect x="23.1842%" y="276" width="0.1307%" height="15" fill="rgb(238,205,33)" fg:x="1596" fg:w="9"/><text x="23.4342%" y="286.50"></text></g><g><title>add_edges_from (networkx/classes/digraph.py) (37 samples, 0.54%)</title><rect x="22.8210%" y="260" width="0.5375%" height="15" fill="rgb(231,56,7)" fg:x="1571" fg:w="37"/><text x="23.0710%" y="270.50"></text></g><g><title>add_nodes_from (networkx/classes/digraph.py) (43 samples, 0.62%)</title><rect x="23.3585%" y="260" width="0.6246%" height="15" fill="rgb(244,186,29)" fg:x="1608" fg:w="43"/><text x="23.6085%" y="270.50"></text></g><g><title>edges (networkx/classes/digraph.py) (8 samples, 0.12%)</title><rect x="23.9831%" y="260" width="0.1162%" height="15" fill="rgb(234,111,31)" fg:x="1651" fg:w="8"/><text x="24.2331%" y="270.50"></text></g><g><title>compose (networkx/algorithms/operators/binary.py) (112 samples, 1.63%)</title><rect x="22.5305%" y="244" width="1.6270%" height="15" fill="rgb(241,149,10)" fg:x="1551" fg:w="112"/><text x="22.7805%" y="254.50"></text></g><g><title>__iter__ (skfuzzy/control/controlsystem.py) (271 samples, 3.94%)</title><rect x="20.4968%" y="196" width="3.9367%" height="15" fill="rgb(249,206,44)" fg:x="1411" fg:w="271"/><text x="20.7468%" y="206.50">__it..</text></g><g><title>_process_rules (skfuzzy/control/controlsystem.py) (241 samples, 3.50%)</title><rect x="20.9326%" y="212" width="3.5009%" height="15" fill="rgb(251,153,30)" fg:x="1441" fg:w="241"/><text x="21.1826%" y="222.50">_pr..</text></g><g><title>graph (skfuzzy/control/rule.py) (143 samples, 2.08%)</title><rect x="22.3562%" y="228" width="2.0773%" height="15" fill="rgb(239,152,38)" fg:x="1539" fg:w="143"/><text x="22.6062%" y="238.50">g..</text></g><g><title>graph (skfuzzy/control/antecedent_consequent.py) (18 samples, 0.26%)</title><rect x="24.1720%" y="244" width="0.2615%" height="15" fill="rgb(249,139,47)" fg:x="1664" fg:w="18"/><text x="24.4220%" y="254.50"></text></g><g><title>add_edge (networkx/classes/digraph.py) (8 samples, 0.12%)</title><rect x="24.3173%" y="260" width="0.1162%" height="15" fill="rgb(244,64,35)" fg:x="1674" fg:w="8"/><text x="24.5673%" y="270.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (117 samples, 1.70%)</title><rect x="24.4335%" y="196" width="1.6996%" height="15" fill="rgb(216,46,15)" fg:x="1682" fg:w="117"/><text x="24.6835%" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="25.9006%" y="212" width="0.2324%" height="15" fill="rgb(250,74,19)" fg:x="1783" fg:w="16"/><text x="26.1506%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (skfuzzy/control/controlsystem.py) (18 samples, 0.26%)</title><rect x="26.5398%" y="212" width="0.2615%" height="15" fill="rgb(249,42,33)" fg:x="1827" fg:w="18"/><text x="26.7898%" y="222.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (33 samples, 0.48%)</title><rect x="26.9030%" y="212" width="0.4794%" height="15" fill="rgb(242,149,17)" fg:x="1852" fg:w="33"/><text x="27.1530%" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.12%)</title><rect x="27.2661%" y="228" width="0.1162%" height="15" fill="rgb(244,29,21)" fg:x="1877" fg:w="8"/><text x="27.5161%" y="238.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (54 samples, 0.78%)</title><rect x="27.3969%" y="212" width="0.7844%" height="15" fill="rgb(220,130,37)" fg:x="1886" fg:w="54"/><text x="27.6469%" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.10%)</title><rect x="28.0796%" y="228" width="0.1017%" height="15" fill="rgb(211,67,2)" fg:x="1933" fg:w="7"/><text x="28.3296%" y="238.50"></text></g><g><title>_update_to_current (skfuzzy/control/controlsystem.py) (160 samples, 2.32%)</title><rect x="26.1331%" y="196" width="2.3242%" height="15" fill="rgb(235,68,52)" fg:x="1799" fg:w="160"/><text x="26.3831%" y="206.50">_..</text></g><g><title>nodes (networkx/classes/graph.py) (19 samples, 0.28%)</title><rect x="28.1813%" y="212" width="0.2760%" height="15" fill="rgb(246,142,3)" fg:x="1940" fg:w="19"/><text x="28.4313%" y="222.50"></text></g><g><title>antecedents (skfuzzy/control/controlsystem.py) (33 samples, 0.48%)</title><rect x="28.4573%" y="196" width="0.4794%" height="15" fill="rgb(241,25,7)" fg:x="1959" fg:w="33"/><text x="28.7073%" y="206.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (45 samples, 0.65%)</title><rect x="30.6217%" y="212" width="0.6537%" height="15" fill="rgb(242,119,39)" fg:x="2108" fg:w="45"/><text x="30.8717%" y="222.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (379 samples, 5.51%)</title><rect x="31.2754%" y="212" width="5.5055%" height="15" fill="rgb(241,98,45)" fg:x="2153" fg:w="379"/><text x="31.5254%" y="222.50">__getit..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (69 samples, 1.00%)</title><rect x="35.7786%" y="228" width="1.0023%" height="15" fill="rgb(254,28,30)" fg:x="2463" fg:w="69"/><text x="36.0286%" y="238.50"></text></g><g><title>__getitem__ (skfuzzy/control/term.py) (20 samples, 0.29%)</title><rect x="36.7809%" y="212" width="0.2905%" height="15" fill="rgb(241,142,54)" fg:x="2532" fg:w="20"/><text x="37.0309%" y="222.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (157 samples, 2.28%)</title><rect x="37.0715%" y="212" width="2.2807%" height="15" fill="rgb(222,85,15)" fg:x="2552" fg:w="157"/><text x="37.3215%" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (28 samples, 0.41%)</title><rect x="38.9454%" y="228" width="0.4067%" height="15" fill="rgb(210,85,47)" fg:x="2681" fg:w="28"/><text x="39.1954%" y="238.50"></text></g><g><title>accumulation_max (skfuzzy/control/antecedent_consequent.py) (16 samples, 0.23%)</title><rect x="39.3521%" y="212" width="0.2324%" height="15" fill="rgb(224,206,25)" fg:x="2709" fg:w="16"/><text x="39.6021%" y="222.50"></text></g><g><title>compute_rule (skfuzzy/control/controlsystem.py) (747 samples, 10.85%)</title><rect x="28.9367%" y="196" width="10.8512%" height="15" fill="rgb(243,201,19)" fg:x="1992" fg:w="747"/><text x="29.1867%" y="206.50">compute_rule (sk..</text></g><g><title>consequents (skfuzzy/control/controlsystem.py) (48 samples, 0.70%)</title><rect x="39.8024%" y="196" width="0.6973%" height="15" fill="rgb(236,59,4)" fg:x="2740" fg:w="48"/><text x="40.0524%" y="206.50"></text></g><g><title>nodes (networkx/classes/graph.py) (11 samples, 0.16%)</title><rect x="40.3399%" y="212" width="0.1598%" height="15" fill="rgb(254,179,45)" fg:x="2777" fg:w="11"/><text x="40.5899%" y="222.50"></text></g><g><title>_amax (numpy/core/_methods.py) (68 samples, 0.99%)</title><rect x="42.6206%" y="228" width="0.9878%" height="15" fill="rgb(226,14,10)" fg:x="2934" fg:w="68"/><text x="42.8706%" y="238.50"></text></g><g><title>defuzz (skfuzzy/defuzzify/defuzz.py) (332 samples, 4.82%)</title><rect x="40.8774%" y="212" width="4.8228%" height="15" fill="rgb(244,27,41)" fg:x="2814" fg:w="332"/><text x="41.1274%" y="222.50">defuzz..</text></g><g><title>amin (&lt;__array_function__ internals&gt;) (144 samples, 2.09%)</title><rect x="43.6084%" y="228" width="2.0918%" height="15" fill="rgb(235,35,32)" fg:x="3002" fg:w="144"/><text x="43.8584%" y="238.50">a..</text></g><g><title>amin (numpy/core/fromnumeric.py) (128 samples, 1.86%)</title><rect x="43.8408%" y="244" width="1.8594%" height="15" fill="rgb(218,68,31)" fg:x="3018" fg:w="128"/><text x="44.0908%" y="254.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (105 samples, 1.53%)</title><rect x="44.1749%" y="260" width="1.5253%" height="15" fill="rgb(207,120,37)" fg:x="3041" fg:w="105"/><text x="44.4249%" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (11 samples, 0.16%)</title><rect x="45.5404%" y="276" width="0.1598%" height="15" fill="rgb(227,98,0)" fg:x="3135" fg:w="11"/><text x="45.7904%" y="286.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (9 samples, 0.13%)</title><rect x="49.4480%" y="228" width="0.1307%" height="15" fill="rgb(207,7,3)" fg:x="3404" fg:w="9"/><text x="49.6980%" y="238.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (111 samples, 1.61%)</title><rect x="49.5787%" y="228" width="1.6124%" height="15" fill="rgb(206,98,19)" fg:x="3413" fg:w="111"/><text x="49.8287%" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (15 samples, 0.22%)</title><rect x="50.9733%" y="244" width="0.2179%" height="15" fill="rgb(217,5,26)" fg:x="3509" fg:w="15"/><text x="51.2233%" y="254.50"></text></g><g><title>diff (&lt;__array_function__ internals&gt;) (141 samples, 2.05%)</title><rect x="56.5514%" y="244" width="2.0482%" height="15" fill="rgb(235,190,38)" fg:x="3893" fg:w="141"/><text x="56.8014%" y="254.50">d..</text></g><g><title>diff (numpy/lib/function_base.py) (111 samples, 1.61%)</title><rect x="56.9872%" y="260" width="1.6124%" height="15" fill="rgb(247,86,24)" fg:x="3923" fg:w="111"/><text x="57.2372%" y="270.50"></text></g><g><title>_interp_universe_fast (skfuzzy/fuzzymath/fuzzy_ops.py) (550 samples, 7.99%)</title><rect x="51.1912%" y="228" width="7.9895%" height="15" fill="rgb(205,101,16)" fg:x="3524" fg:w="550"/><text x="51.4412%" y="238.50">_interp_uni..</text></g><g><title>where (&lt;__array_function__ internals&gt;) (40 samples, 0.58%)</title><rect x="58.5997%" y="244" width="0.5811%" height="15" fill="rgb(246,168,33)" fg:x="4034" fg:w="40"/><text x="58.8497%" y="254.50"></text></g><g><title>interp_membership (skfuzzy/fuzzymath/fuzzy_ops.py) (113 samples, 1.64%)</title><rect x="59.1807%" y="228" width="1.6415%" height="15" fill="rgb(231,114,1)" fg:x="4074" fg:w="113"/><text x="59.4307%" y="238.50"></text></g><g><title>interp (&lt;__array_function__ internals&gt;) (100 samples, 1.45%)</title><rect x="59.3696%" y="244" width="1.4526%" height="15" fill="rgb(207,184,53)" fg:x="4087" fg:w="100"/><text x="59.6196%" y="254.50"></text></g><g><title>interp (numpy/lib/function_base.py) (80 samples, 1.16%)</title><rect x="59.6601%" y="260" width="1.1621%" height="15" fill="rgb(224,95,51)" fg:x="4107" fg:w="80"/><text x="59.9101%" y="270.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;) (27 samples, 0.39%)</title><rect x="60.4300%" y="276" width="0.3922%" height="15" fill="rgb(212,188,45)" fg:x="4160" fg:w="27"/><text x="60.6800%" y="286.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (107 samples, 1.55%)</title><rect x="61.6066%" y="260" width="1.5543%" height="15" fill="rgb(223,154,38)" fg:x="4241" fg:w="107"/><text x="61.8566%" y="270.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (258 samples, 3.75%)</title><rect x="63.7420%" y="292" width="3.7478%" height="15" fill="rgb(251,22,52)" fg:x="4388" fg:w="258"/><text x="63.9920%" y="302.50">_uni..</text></g><g><title>union1d (&lt;__array_function__ internals&gt;) (464 samples, 6.74%)</title><rect x="60.8222%" y="228" width="6.7403%" height="15" fill="rgb(229,209,22)" fg:x="4187" fg:w="464"/><text x="61.0722%" y="238.50">union1d (..</text></g><g><title>union1d (numpy/lib/arraysetops.py) (438 samples, 6.36%)</title><rect x="61.1999%" y="244" width="6.3626%" height="15" fill="rgb(234,138,34)" fg:x="4213" fg:w="438"/><text x="61.4499%" y="254.50">union1d ..</text></g><g><title>unique (&lt;__array_function__ internals&gt;) (303 samples, 4.40%)</title><rect x="63.1610%" y="260" width="4.4015%" height="15" fill="rgb(212,95,11)" fg:x="4348" fg:w="303"/><text x="63.4110%" y="270.50">uniqu..</text></g><g><title>unique (numpy/lib/arraysetops.py) (274 samples, 3.98%)</title><rect x="63.5822%" y="276" width="3.9802%" height="15" fill="rgb(240,179,47)" fg:x="4377" fg:w="274"/><text x="63.8322%" y="286.50">uniq..</text></g><g><title>copyto (&lt;__array_function__ internals&gt;) (38 samples, 0.55%)</title><rect x="68.4486%" y="260" width="0.5520%" height="15" fill="rgb(240,163,11)" fg:x="4712" fg:w="38"/><text x="68.6986%" y="270.50"></text></g><g><title>defuzz (skfuzzy/control/controlsystem.py) (2,016 samples, 29.29%)</title><rect x="40.4997%" y="196" width="29.2853%" height="15" fill="rgb(236,37,12)" fg:x="2788" fg:w="2016"/><text x="40.7497%" y="206.50">defuzz (skfuzzy/control/controlsystem.py)</text></g><g><title>find_memberships (skfuzzy/control/controlsystem.py) (1,658 samples, 24.08%)</title><rect x="45.7002%" y="212" width="24.0848%" height="15" fill="rgb(232,164,16)" fg:x="3146" fg:w="1658"/><text x="45.9502%" y="222.50">find_memberships (skfuzzy/control/cont..</text></g><g><title>zeros_like (&lt;__array_function__ internals&gt;) (153 samples, 2.22%)</title><rect x="67.5625%" y="228" width="2.2225%" height="15" fill="rgb(244,205,15)" fg:x="4651" fg:w="153"/><text x="67.8125%" y="238.50">z..</text></g><g><title>zeros_like (numpy/core/numeric.py) (131 samples, 1.90%)</title><rect x="67.8820%" y="244" width="1.9030%" height="15" fill="rgb(223,117,47)" fg:x="4673" fg:w="131"/><text x="68.1320%" y="254.50">z..</text></g><g><title>empty_like (&lt;__array_function__ internals&gt;) (54 samples, 0.78%)</title><rect x="69.0006%" y="260" width="0.7844%" height="15" fill="rgb(244,107,35)" fg:x="4750" fg:w="54"/><text x="69.2506%" y="270.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (16 samples, 0.23%)</title><rect x="71.2667%" y="212" width="0.2324%" height="15" fill="rgb(205,140,8)" fg:x="4906" fg:w="16"/><text x="71.5167%" y="222.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (233 samples, 3.38%)</title><rect x="71.4991%" y="212" width="3.3847%" height="15" fill="rgb(228,84,46)" fg:x="4922" fg:w="233"/><text x="71.7491%" y="222.50">__s..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (26 samples, 0.38%)</title><rect x="74.5061%" y="228" width="0.3777%" height="15" fill="rgb(254,188,9)" fg:x="5129" fg:w="26"/><text x="74.7561%" y="238.50"></text></g><g><title>fuzz (skfuzzy/control/controlsystem.py) (805 samples, 11.69%)</title><rect x="69.7850%" y="196" width="11.6938%" height="15" fill="rgb(206,112,54)" fg:x="4804" fg:w="805"/><text x="70.0350%" y="206.50">fuzz (skfuzzy/con..</text></g><g><title>interp_membership (skfuzzy/fuzzymath/fuzzy_ops.py) (454 samples, 6.60%)</title><rect x="74.8838%" y="212" width="6.5950%" height="15" fill="rgb(216,84,49)" fg:x="5155" fg:w="454"/><text x="75.1338%" y="222.50">interp_me..</text></g><g><title>interp (&lt;__array_function__ internals&gt;) (402 samples, 5.84%)</title><rect x="75.6392%" y="228" width="5.8396%" height="15" fill="rgb(214,194,35)" fg:x="5207" fg:w="402"/><text x="75.8892%" y="238.50">interp ..</text></g><g><title>interp (numpy/lib/function_base.py) (298 samples, 4.33%)</title><rect x="77.1499%" y="244" width="4.3289%" height="15" fill="rgb(249,28,3)" fg:x="5311" fg:w="298"/><text x="77.3999%" y="254.50">inter..</text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;) (93 samples, 1.35%)</title><rect x="80.1278%" y="260" width="1.3510%" height="15" fill="rgb(222,56,52)" fg:x="5516" fg:w="93"/><text x="80.3778%" y="270.50"></text></g><g><title>iscomplexobj (numpy/lib/type_check.py) (44 samples, 0.64%)</title><rect x="80.8396%" y="276" width="0.6392%" height="15" fill="rgb(245,217,50)" fg:x="5565" fg:w="44"/><text x="81.0896%" y="286.50"></text></g><g><title>compute (skfuzzy/control/controlsystem.py) (4,593 samples, 66.72%)</title><rect x="14.8024%" y="180" width="66.7199%" height="15" fill="rgb(213,201,24)" fg:x="1019" fg:w="4593"/><text x="15.0524%" y="190.50">compute (skfuzzy/control/controlsystem.py)</text></g><g><title>&lt;listcomp&gt; (skfuzzy/control/controlsystem.py) (50 samples, 0.73%)</title><rect x="83.7159%" y="212" width="0.7263%" height="15" fill="rgb(248,116,28)" fg:x="5763" fg:w="50"/><text x="83.9659%" y="222.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (50 samples, 0.73%)</title><rect x="84.5874%" y="212" width="0.7263%" height="15" fill="rgb(219,72,43)" fg:x="5823" fg:w="50"/><text x="84.8374%" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (13 samples, 0.19%)</title><rect x="85.1249%" y="228" width="0.1888%" height="15" fill="rgb(209,138,14)" fg:x="5860" fg:w="13"/><text x="85.3749%" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py) (69 samples, 1.00%)</title><rect x="85.3138%" y="212" width="1.0023%" height="15" fill="rgb(222,18,33)" fg:x="5873" fg:w="69"/><text x="85.5638%" y="222.50"></text></g><g><title>_amin (numpy/core/_methods.py) (55 samples, 0.80%)</title><rect x="86.3161%" y="212" width="0.7990%" height="15" fill="rgb(213,199,7)" fg:x="5942" fg:w="55"/><text x="86.5661%" y="222.50"></text></g><g><title>_is_ndarray (skfuzzy/control/controlsystem.py) (9 samples, 0.13%)</title><rect x="87.1150%" y="212" width="0.1307%" height="15" fill="rgb(250,110,10)" fg:x="5997" fg:w="9"/><text x="87.3650%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (skfuzzy/control/controlsystem.py) (43 samples, 0.62%)</title><rect x="87.9431%" y="228" width="0.6246%" height="15" fill="rgb(248,123,6)" fg:x="6054" fg:w="43"/><text x="88.1931%" y="238.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (11 samples, 0.16%)</title><rect x="88.5967%" y="228" width="0.1598%" height="15" fill="rgb(206,91,31)" fg:x="6099" fg:w="11"/><text x="88.8467%" y="238.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (94 samples, 1.37%)</title><rect x="88.7565%" y="228" width="1.3655%" height="15" fill="rgb(211,154,13)" fg:x="6110" fg:w="94"/><text x="89.0065%" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (17 samples, 0.25%)</title><rect x="89.8751%" y="244" width="0.2469%" height="15" fill="rgb(225,148,7)" fg:x="6187" fg:w="17"/><text x="90.1251%" y="254.50"></text></g><g><title>__setitem__ (skfuzzy/control/state.py) (114 samples, 1.66%)</title><rect x="90.1947%" y="228" width="1.6560%" height="15" fill="rgb(220,160,43)" fg:x="6209" fg:w="114"/><text x="90.4447%" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (16 samples, 0.23%)</title><rect x="91.6182%" y="244" width="0.2324%" height="15" fill="rgb(213,52,39)" fg:x="6307" fg:w="16"/><text x="91.8682%" y="254.50"></text></g><g><title>_update_to_current (skfuzzy/control/controlsystem.py) (330 samples, 4.79%)</title><rect x="87.2458%" y="212" width="4.7937%" height="15" fill="rgb(243,137,7)" fg:x="6006" fg:w="330"/><text x="87.4958%" y="222.50">_updat..</text></g><g><title>nodes (networkx/classes/graph.py) (13 samples, 0.19%)</title><rect x="91.8507%" y="228" width="0.1888%" height="15" fill="rgb(230,79,13)" fg:x="6323" fg:w="13"/><text x="92.1007%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (skfuzzy/control/controlsystem.py) (31 samples, 0.45%)</title><rect x="94.7850%" y="260" width="0.4503%" height="15" fill="rgb(247,105,23)" fg:x="6525" fg:w="31"/><text x="95.0350%" y="270.50"></text></g><g><title>__get__ (skfuzzy/control/state.py) (10 samples, 0.15%)</title><rect x="95.2499%" y="260" width="0.1453%" height="15" fill="rgb(223,179,41)" fg:x="6557" fg:w="10"/><text x="95.4999%" y="270.50"></text></g><g><title>__getitem__ (skfuzzy/control/state.py) (78 samples, 1.13%)</title><rect x="95.3951%" y="260" width="1.1331%" height="15" fill="rgb(218,9,34)" fg:x="6567" fg:w="78"/><text x="95.6451%" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (18 samples, 0.26%)</title><rect x="96.2667%" y="276" width="0.2615%" height="15" fill="rgb(222,106,8)" fg:x="6627" fg:w="18"/><text x="96.5167%" y="286.50"></text></g><g><title>_update_unique_id (skfuzzy/control/controlsystem.py) (333 samples, 4.84%)</title><rect x="92.0395%" y="212" width="4.8373%" height="15" fill="rgb(211,220,0)" fg:x="6336" fg:w="333"/><text x="92.2895%" y="222.50">_updat..</text></g><g><title>_get_inputs (skfuzzy/control/controlsystem.py) (218 samples, 3.17%)</title><rect x="93.7101%" y="228" width="3.1668%" height="15" fill="rgb(229,52,16)" fg:x="6451" fg:w="218"/><text x="93.9601%" y="238.50">_ge..</text></g><g><title>_get_inputs (skfuzzy/control/controlsystem.py) (212 samples, 3.08%)</title><rect x="93.7972%" y="244" width="3.0796%" height="15" fill="rgb(212,155,18)" fg:x="6457" fg:w="212"/><text x="94.0472%" y="254.50">_ge..</text></g><g><title>nodes (networkx/classes/graph.py) (20 samples, 0.29%)</title><rect x="96.5863%" y="260" width="0.2905%" height="15" fill="rgb(242,21,14)" fg:x="6649" fg:w="20"/><text x="96.8363%" y="270.50"></text></g><g><title>inputs (skfuzzy/control/controlsystem.py) (1,081 samples, 15.70%)</title><rect x="81.5224%" y="180" width="15.7031%" height="15" fill="rgb(222,19,48)" fg:x="5612" fg:w="1081"/><text x="81.7724%" y="190.50">inputs (skfuzzy/control/..</text></g><g><title>__setitem__ (skfuzzy/control/controlsystem.py) (1,063 samples, 15.44%)</title><rect x="81.7838%" y="196" width="15.4416%" height="15" fill="rgb(232,45,27)" fg:x="5630" fg:w="1063"/><text x="82.0338%" y="206.50">__setitem__ (skfuzzy/con..</text></g><g><title>nodes (networkx/classes/graph.py) (24 samples, 0.35%)</title><rect x="96.8768%" y="212" width="0.3486%" height="15" fill="rgb(249,103,42)" fg:x="6669" fg:w="24"/><text x="97.1268%" y="222.50"></text></g><g><title>__init__ (networkx/classes/reportviews.py) (9 samples, 0.13%)</title><rect x="97.0947%" y="228" width="0.1307%" height="15" fill="rgb(246,81,33)" fg:x="6684" fg:w="9"/><text x="97.3447%" y="238.50"></text></g><g><title>_box_col_values (pandas/core/frame.py) (11 samples, 0.16%)</title><rect x="97.3707%" y="292" width="0.1598%" height="15" fill="rgb(252,33,42)" fg:x="6703" fg:w="11"/><text x="97.6207%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py) (8 samples, 0.12%)</title><rect x="97.4143%" y="308" width="0.1162%" height="15" fill="rgb(209,212,41)" fg:x="6706" fg:w="8"/><text x="97.6643%" y="318.50"></text></g><g><title>_ixs (pandas/core/frame.py) (30 samples, 0.44%)</title><rect x="97.3707%" y="276" width="0.4358%" height="15" fill="rgb(207,154,6)" fg:x="6703" fg:w="30"/><text x="97.6207%" y="286.50"></text></g><g><title>iget (pandas/core/internals/managers.py) (18 samples, 0.26%)</title><rect x="97.5450%" y="292" width="0.2615%" height="15" fill="rgb(223,64,47)" fg:x="6715" fg:w="18"/><text x="97.7950%" y="302.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py) (35 samples, 0.51%)</title><rect x="97.3417%" y="260" width="0.5084%" height="15" fill="rgb(211,161,38)" fg:x="6701" fg:w="35"/><text x="97.5917%" y="270.50"></text></g><g><title>_getitem_lowerdim (pandas/core/indexing.py) (38 samples, 0.55%)</title><rect x="97.3126%" y="244" width="0.5520%" height="15" fill="rgb(219,138,40)" fg:x="6699" fg:w="38"/><text x="97.5626%" y="254.50"></text></g><g><title>_getitem_tuple (pandas/core/indexing.py) (48 samples, 0.70%)</title><rect x="97.2836%" y="228" width="0.6973%" height="15" fill="rgb(241,228,46)" fg:x="6697" fg:w="48"/><text x="97.5336%" y="238.50"></text></g><g><title>_has_valid_tuple (pandas/core/indexing.py) (8 samples, 0.12%)</title><rect x="97.8646%" y="244" width="0.1162%" height="15" fill="rgb(223,209,38)" fg:x="6737" fg:w="8"/><text x="98.1146%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/frame.py) (52 samples, 0.76%)</title><rect x="97.2545%" y="196" width="0.7554%" height="15" fill="rgb(236,164,45)" fg:x="6695" fg:w="52"/><text x="97.5045%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py) (52 samples, 0.76%)</title><rect x="97.2545%" y="212" width="0.7554%" height="15" fill="rgb(231,15,5)" fg:x="6695" fg:w="52"/><text x="97.5045%" y="222.50"></text></g><g><title>_make_predictions (evofuzzy/fuzzyclassifier.py) (6,513 samples, 94.61%)</title><rect x="3.8786%" y="164" width="94.6107%" height="15" fill="rgb(252,35,15)" fg:x="267" fg:w="6513"/><text x="4.1286%" y="174.50">_make_predictions (evofuzzy/fuzzyclassifier.py)</text></g><g><title>itertuples (pandas/core/frame.py) (87 samples, 1.26%)</title><rect x="97.2255%" y="180" width="1.2638%" height="15" fill="rgb(248,181,18)" fg:x="6693" fg:w="87"/><text x="97.4755%" y="190.50"></text></g><g><title>namedtuple (collections/__init__.py) (32 samples, 0.46%)</title><rect x="98.0244%" y="196" width="0.4648%" height="15" fill="rgb(233,39,42)" fg:x="6748" fg:w="32"/><text x="98.2744%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 0.16%)</title><rect x="98.5474%" y="228" width="0.1598%" height="15" fill="rgb(238,110,33)" fg:x="6784" fg:w="11"/><text x="98.7974%" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (11 samples, 0.16%)</title><rect x="98.5474%" y="244" width="0.1598%" height="15" fill="rgb(233,195,10)" fg:x="6784" fg:w="11"/><text x="98.7974%" y="254.50"></text></g><g><title>check_consistent_length (sklearn/utils/validation.py) (16 samples, 0.23%)</title><rect x="98.5474%" y="212" width="0.2324%" height="15" fill="rgb(254,105,3)" fg:x="6784" fg:w="16"/><text x="98.7974%" y="222.50"></text></g><g><title>is_multilabel (sklearn/utils/multiclass.py) (15 samples, 0.22%)</title><rect x="99.0848%" y="228" width="0.2179%" height="15" fill="rgb(221,225,9)" fg:x="6821" fg:w="15"/><text x="99.3348%" y="238.50"></text></g><g><title>_check_targets (sklearn/metrics/_classification.py) (71 samples, 1.03%)</title><rect x="98.5328%" y="196" width="1.0314%" height="15" fill="rgb(224,227,45)" fg:x="6783" fg:w="71"/><text x="98.7828%" y="206.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py) (48 samples, 0.70%)</title><rect x="98.8669%" y="212" width="0.6973%" height="15" fill="rgb(229,198,43)" fg:x="6806" fg:w="48"/><text x="99.1169%" y="222.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (14 samples, 0.20%)</title><rect x="99.3608%" y="228" width="0.2034%" height="15" fill="rgb(206,209,35)" fg:x="6840" fg:w="14"/><text x="99.6108%" y="238.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (11 samples, 0.16%)</title><rect x="99.4044%" y="244" width="0.1598%" height="15" fill="rgb(245,195,53)" fg:x="6843" fg:w="11"/><text x="99.6544%" y="254.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (11 samples, 0.16%)</title><rect x="99.4044%" y="260" width="0.1598%" height="15" fill="rgb(240,92,26)" fg:x="6843" fg:w="11"/><text x="99.6544%" y="270.50"></text></g><g><title>_weighted_sum (sklearn/metrics/_classification.py) (9 samples, 0.13%)</title><rect x="99.5642%" y="196" width="0.1307%" height="15" fill="rgb(207,40,23)" fg:x="6854" fg:w="9"/><text x="99.8142%" y="206.50"></text></g><g><title>average (&lt;__array_function__ internals&gt;) (9 samples, 0.13%)</title><rect x="99.5642%" y="212" width="0.1307%" height="15" fill="rgb(223,111,35)" fg:x="6854" fg:w="9"/><text x="99.8142%" y="222.50"></text></g><g><title>average (numpy/lib/function_base.py) (8 samples, 0.12%)</title><rect x="99.5787%" y="228" width="0.1162%" height="15" fill="rgb(229,147,28)" fg:x="6855" fg:w="8"/><text x="99.8287%" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py) (7 samples, 0.10%)</title><rect x="99.5933%" y="244" width="0.1017%" height="15" fill="rgb(211,29,28)" fg:x="6856" fg:w="7"/><text x="99.8433%" y="254.50"></text></g><g><title>_evaluate (evofuzzy/fuzzyclassifier.py) (6,684 samples, 97.09%)</title><rect x="2.6874%" y="148" width="97.0947%" height="15" fill="rgb(228,72,33)" fg:x="185" fg:w="6684"/><text x="2.9374%" y="158.50">_evaluate (evofuzzy/fuzzyclassifier.py)</text></g><g><title>inner_f (sklearn/utils/validation.py) (89 samples, 1.29%)</title><rect x="98.4893%" y="164" width="1.2929%" height="15" fill="rgb(205,214,31)" fg:x="6780" fg:w="89"/><text x="98.7393%" y="174.50"></text></g><g><title>accuracy_score (sklearn/metrics/_classification.py) (87 samples, 1.26%)</title><rect x="98.5183%" y="180" width="1.2638%" height="15" fill="rgb(224,111,15)" fg:x="6782" fg:w="87"/><text x="98.7683%" y="190.50"></text></g><g><title>evaluate_population (evofuzzy/fuzzygp.py) (6,688 samples, 97.15%)</title><rect x="2.6438%" y="132" width="97.1528%" height="15" fill="rgb(253,21,26)" fg:x="182" fg:w="6688"/><text x="2.8938%" y="142.50">evaluate_population (evofuzzy/fuzzygp.py)</text></g><g><title>fit (evofuzzy/fuzzyclassifier.py) (6,704 samples, 97.39%)</title><rect x="2.6002%" y="100" width="97.3852%" height="15" fill="rgb(245,139,43)" fg:x="179" fg:w="6704"/><text x="2.8502%" y="110.50">fit (evofuzzy/fuzzyclassifier.py)</text></g><g><title>ea_with_elitism_and_replacement (evofuzzy/fuzzygp.py) (6,704 samples, 97.39%)</title><rect x="2.6002%" y="116" width="97.3852%" height="15" fill="rgb(252,170,7)" fg:x="179" fg:w="6704"/><text x="2.8502%" y="126.50">ea_with_elitism_and_replacement (evofuzzy/fuzzygp.py)</text></g><g><title>all (6,884 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="6884"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (classify_iris.py) (6,884 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="6884"/><text x="0.2500%" y="78.50">&lt;module&gt; (classify_iris.py)</text></g><g><title>cross_validate (classifier_cv.py) (6,705 samples, 97.40%)</title><rect x="2.6002%" y="84" width="97.3998%" height="15" fill="rgb(221,39,39)" fg:x="179" fg:w="6705"/><text x="2.8502%" y="94.50">cross_validate (classifier_cv.py)</text></g></svg></svg>